<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Autodesk2020</name>
    </assembly>
    <members>
        <member name="T:CivilConnection.AbstractMEPCurve">
            <summary>
            AbstratMEPCurve object Type. Base class for Revti MEP Curve objects.
            </summary>
            <seealso cref="T:Revit.Elements.Element" />
        </member>
        <member name="P:CivilConnection.AbstractMEPCurve.InternalMEPCurve">
            <summary>
            Gets the internal mep curve.
            </summary>
            <value>
            The internal mep curve.
            </value>
        </member>
        <member name="P:CivilConnection.AbstractMEPCurve.InternalElement">
            <summary>
            A reference to the element
            </summary>
        </member>
        <member name="P:CivilConnection.AbstractMEPCurve.Location">
            <summary>
            Gets or sets the location.
            </summary>
            <value>
            The location.
            </value>
        </member>
        <member name="P:CivilConnection.AbstractMEPCurve.System">
            <summary>
            Gets the MEP system.
            </summary>
            <value>
            The system.
            </value>
        </member>
        <member name="P:CivilConnection.AbstractMEPCurve.Width">
            <summary>
            Gets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:CivilConnection.AbstractMEPCurve.Height">
            <summary>
            Gets the height.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:CivilConnection.AbstractMEPCurve.LevelOffset">
            <summary>
            Gets the level offset.
            </summary>
            <value>
            The level offset.
            </value>
        </member>
        <member name="M:CivilConnection.AbstractMEPCurve.InternalSetMEPCurve(Autodesk.Revit.DB.MEPCurve)">
            <summary>
            Internals the set mep curve.
            </summary>
            <param name="fi">The MEPCurve instance</param>
        </member>
        <member name="M:CivilConnection.AbstractMEPCurve.InternalSetMEPCurveType(Autodesk.Revit.DB.MEPCurveType)">
            <summary>
            Internals the type of the set mep curve.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:CivilConnection.AbstractMEPCurve.InternalSetPosition(Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.XYZ)">
            <summary>
            Internals the set position.
            </summary>
            <param name="start">The start point.</param>
            <param name="end">The end point.</param>
        </member>
        <member name="M:CivilConnection.AbstractMEPCurve.Connectors">
            <summary>
            Connectors on the MEPCurve.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.AbstractMEPCurve.ToString">
            <summary>
            Returns a text that represents this instance.
            </summary>
            <returns>
            A text that represents this instance.
            </returns>
        </member>
        <member name="T:CivilConnection.Alignment">
            <summary>
            Alignment object type.
            </summary>
        </member>
        <member name="P:CivilConnection.Alignment.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:CivilConnection.Alignment.Length">
            <summary>
            Gets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="P:CivilConnection.Alignment.Start">
            <summary>
            Gets the start.
            </summary>
            <value>
            The start.
            </value>
        </member>
        <member name="P:CivilConnection.Alignment.End">
            <summary>
            Gets the end.
            </summary>
            <value>
            The end.
            </value>
        </member>
        <member name="P:CivilConnection.Alignment.GeometryStations">
            <summary>
            Gets the stations of the geometry points.
            </summary>
            <value>
            The GeometryStations.
            </value>
        </member>
        <member name="P:CivilConnection.Alignment.PIStations">
            <summary>
            Gets the stations of the points of intersection.
            </summary>
            <value>
            The PIStations.
            </value>
        </member>
        <member name="P:CivilConnection.Alignment.SuperTransStations">
            <summary>
            Gets the stations of the points of superelevation transition.
            </summary>
            <value>
            The SuperTransStations.
            </value>
        </member>
        <member name="P:CivilConnection.Alignment.InternalElement">
            <summary>
            Gets the internal element.
            </summary>
            <value>
            The internal element.
            </value>
        </member>
        <member name="M:CivilConnection.Alignment.#ctor(Autodesk.AECC.Interop.Land.AeccAlignment)">
            <summary>
            Internal constructor.
            </summary>
            <param name="alignment">The internal AeccAlignment.</param>
        </member>
        <member name="M:CivilConnection.Alignment.ByPolygonal(CivilConnection.CivilDocument,System.String,Autodesk.DesignScript.Geometry.PolyCurve,System.String)">
            <summary>
            Creates an Alignment in the Civil Document starting from a Dynamo polygonal PolyCurve.
            </summary>
            <param name="civilDocument">The CivilDocument.</param>
            <param name="name">The name of the alignment.</param>
            <param name="polyCurve">The source PolyCurve.</param>
            <param name="layer">The layer.</param>
            <returns>
            The new Alignment
            </returns>
        </member>
        <member name="M:CivilConnection.Alignment.GetProfiles">
            <summary>
            Returns the list of vertical Profiles associated to the Alignment.
            </summary>
            <returns>The list of associated Profiles.</returns>
        </member>
        <member name="M:CivilConnection.Alignment.GetProfileViews">
            <summary>
            Returns the list of vertical ProfileViews associated to the Alignment.
            </summary>
            <returns>The list of assocaited ProfileViews.</returns>
        </member>
        <member name="M:CivilConnection.Alignment.Factorial(System.Int32)">
            <summary>
            Factorial function. Returns a double to allow for values bigger than 20!
            </summary>
            <param name="f"></param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Alignment.GetCurves(System.Double)">
            <summary>
            Returns the list of Dynamo curves that defines the Alignment.
            </summary>
            <param name="tessellation">The length of the tessellation for spirals, by default is 1 unit.</param>
            <returns>A list of curves that represent the Alignment.</returns>
            <remarks>The tool returns only lines and arcs.</remarks>
        </member>
        <member name="M:CivilConnection.Alignment.SortCurves(System.Collections.Generic.IList{Autodesk.DesignScript.Geometry.Curve})">
            <summary>
            Sorts a list of Dynamo Curves.
            </summary>
            <param name="curves">THe list of Curves.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Alignment.SampleLinesParameters">
            <summary>
            Returns the Sample Lines parameters associated with the alignment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Alignment.GetStationOffsetElevation(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Returns the station, offset and elevation of a point from the alignment.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Alignment.CoordinateSystemByStation(System.Double,System.Double,System.Double)">
            <summary>
            Returns a CoordinateSystem along the Alignment at the specified station.
            </summary>
            <param name="station">The station value.</param>
            <param name="offset">The offset value.</param>
            <param name="elevation">The elevation value.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Alignment.PointByStationOffsetElevation(System.Double,System.Double,System.Double)">
            <summary>
            Returns a Point along the Alignment at the specified station.
            </summary>
            <param name="station">The station value.</param>
            <param name="offset">The offset value.</param>
            <param name="elevation">The elevation value.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Alignment.ToString">
            <summary>
            Public textual representation in the Dynamo node preview.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:CivilConnection.AppliedAssembly">
            <summary>
            AppliedAssembly object type.
            </summary>
        </member>
        <member name="M:CivilConnection.AppliedAssembly.#ctor(CivilConnection.BaselineRegion,Autodesk.AECC.Interop.Roadway.AeccAppliedAssembly,Autodesk.AECC.Interop.Roadway.AeccCorridor)">
            <summary>
            Internal Constructor.
            </summary>
            <param name="blr">The BaselineRegion</param>
            <param name="appliedAssembly">the AeccAppliedAssembly form Civil 3D.</param>
            <param name="corridor">the AeccCorridor from Civil 3D.</param>
        </member>
        <member name="M:CivilConnection.AppliedAssembly.ToString">
            <summary>
            Public textual representation in the Dynamo node preview.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:CivilConnection.AbstractAppliedSubassemblyGeometryObject">
            <summary>
            Base class for applied subassemblies geometry objects.
            </summary>
        </member>
        <member name="F:CivilConnection.AbstractAppliedSubassemblyGeometryObject._name">
            <exclude/>
        </member>
        <member name="F:CivilConnection.AbstractAppliedSubassemblyGeometryObject._geometry">
            <exclude/>
        </member>
        <member name="F:CivilConnection.AbstractAppliedSubassemblyGeometryObject._codes">
            <exclude/>
        </member>
        <member name="F:CivilConnection.AbstractAppliedSubassemblyGeometryObject._station">
            <exclude/>
        </member>
        <member name="T:CivilConnection.AppliedSubassemblyLink">
            <summary>
            The Applied Subassembly link object
            </summary>
        </member>
        <member name="P:CivilConnection.AppliedSubassemblyLink.Name">
            <summary>
            Returns the unique name of the object.
            </summary>
        </member>
        <member name="P:CivilConnection.AppliedSubassemblyLink.Geometry">
            <summary>
            Returns the Dynamo geometry associated to the object.
            </summary>
        </member>
        <member name="P:CivilConnection.AppliedSubassemblyLink.Codes">
            <summary>
            Returns the list of codes associated to the object.
            </summary>
        </member>
        <member name="P:CivilConnection.AppliedSubassemblyLink.Station">
            <summary>
            Returns the station associated to the object.
            </summary>
        </member>
        <member name="M:CivilConnection.AppliedSubassemblyLink.ToString">
            <summary>
            Public textual representation of the Dynamo node preview
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:CivilConnection.AppliedSubassemblyShape">
            <summary>
            The Applied Subassembly shape object
            </summary>
        </member>
        <member name="P:CivilConnection.AppliedSubassemblyShape.Name">
            <summary>
            Returns the unique name of the object.
            </summary>
        </member>
        <member name="P:CivilConnection.AppliedSubassemblyShape.Geometry">
            <summary>
            Returns the Dynamo geometry associated to the object.
            </summary>
        </member>
        <member name="P:CivilConnection.AppliedSubassemblyShape.Codes">
            <summary>
            Returns the list of codes associated to the object.
            </summary>
        </member>
        <member name="P:CivilConnection.AppliedSubassemblyShape.Station">
            <summary>
            Returns the station associated to the object.
            </summary>
        </member>
        <member name="M:CivilConnection.AppliedSubassemblyShape.ToString">
            <summary>
            Public textual representation of the Dynamo node preview
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:CivilConnection.Baseline">
            <summary>
            Baseline obejct type.
            </summary>
        </member>
        <member name="P:CivilConnection.Baseline.Alignment">
            <summary>
            Gets the alignment.
            </summary>
            <value>
            The alignment.
            </value>
        </member>
        <member name="P:CivilConnection.Baseline.Start">
            <summary>
            Gets the start station.
            </summary>
            <value>
            The start.
            </value>
        </member>
        <member name="P:CivilConnection.Baseline.End">
            <summary>
            Gets the end station.
            </summary>
            <value>
            The end.
            </value>
        </member>
        <member name="P:CivilConnection.Baseline.Stations">
            <summary>
            Gets the stations.
            </summary>
            <value>
            The stations.
            </value>
        </member>
        <member name="P:CivilConnection.Baseline.PolyCurves">
            <summary>
            Gets the geometry representation of the Baseline.
            </summary>
            <value>
            The poly curves.
            </value>
        </member>
        <member name="P:CivilConnection.Baseline.CorridorName">
            <summary>
            Gets the name of the Corridor.
            </summary>
            <value>
            The name of the Corridor.
            </value>
        </member>
        <member name="P:CivilConnection.Baseline.InternalElement">
            <summary>
            Gets the internal element.
            </summary>
            <value>
            The internal element.
            </value>
        </member>
        <member name="P:CivilConnection.Baseline.Index">
            <summary>
            Gets the index of the Baseline in the Corridor
            </summary>
            <value>
            The index.
            </value>
        </member>
        <member name="P:CivilConnection.Baseline.BaselineRegions">
            <summary>
            Gets the list of BaselineRegions
            </summary>
        </member>
        <member name="M:CivilConnection.Baseline.#ctor(Autodesk.AECC.Interop.Roadway.AeccBaseline,System.Int32,CivilConnection.Corridor)">
            <summary>
            Internal constructor
            </summary>
        </member>
        <member name="M:CivilConnection.Baseline.BaselinePolyCurves">
            <summary>
            Private method to retrieve Baseline PolyCurves.
            </summary>
            <returns>A list of PolyCurves for each BaselineRegion.</returns>
            <remarks>In case of large dataset, the Geometry Working Range wiill return a warning. Set the Geometry Working Range to Medium.</remarks>
        </member>
        <member name="M:CivilConnection.Baseline.GetOffsetAlignment">
            <summary>
            Returns the Offset Alignment name.
            </summary>
            <returns>The names of the offset Alignments, otherwise "None".</returns>
        </member>
        <member name="M:CivilConnection.Baseline.GetFeaturelinesFromXML(System.String)">
            <summary>
            Returns a collection of Featurelines in the Baseline for the given code organized by regions.
            </summary>
            <param name="code">The code of the Featurelines.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Baseline.GetBaselineRegions">
            <summary>
            Returns the list of BaselineRegions in the Baseline.
            </summary>
            <returns>A list of BaselineRegions.</returns>
        </member>
        <member name="M:CivilConnection.Baseline.GetBaselineRegionIndexByStation(System.Double)">
            <summary>
            Returns the index of the BaselineRegion in the Baseline that contains the station value.
            </summary>
            <param name="station">A double that represents a station along the corridor.</param>
            <returns>An integer for the BaselineRegion that contains the station value.</returns>
            <remarks>If the station input is less than the first station it returns 0. If the station input is greater than the last station it returns the number of BaselineRegions - 1.</remarks>
        </member>
        <member name="M:CivilConnection.Baseline.PointByStationOffsetElevation(System.Double,System.Double,System.Double)">
            <summary>
            Returns a point relative to the Baseline with station, offset and elevation.
            </summary>
            <param name="station">The distance measured along the Alignment.</param>
            <param name="offset">The horizontal displacement from the Baseline measured at a given station.</param>
            <param name="elevation">The vertical displacement from the Baseline measured at a given station.</param>
            <returns>A Dynamo Point.</returns>
        </member>
        <member name="M:CivilConnection.Baseline.CoordinateSystemByStation(System.Double)">
            <summary>
            Returns the Baseline CoordinateSystem at a station value.
            </summary>
            <param name="station">The input station.</param>
            <returns></returns>
            <remarks>if the station falls outside of the corridor it returns the Identity Coordinate System.</remarks>
        </member>
        <member name="M:CivilConnection.Baseline.GetCoordinateSystemByPoint(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Returns the closest Baseline CoordinateSystem and uses the point as new origin.
            </summary>
            <param name="point">The input Point.</param>
            <returns>The CoordinateSystem.</returns>
            <remarks>if the station falls outside of the corridor it returns the Identity Coordinate System.</remarks>
        </member>
        <member name="M:CivilConnection.Baseline.GetStationOffsetElevationByPoint(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Returns the station, offset, elevation of the point with respect to the Baseline.
            </summary>
            <param name="point">The input Point.</param>
            <returns>A double[].</returns>
        </member>
        <member name="M:CivilConnection.Baseline.GetArrayStationOffsetElevationByPoint(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Gets the array station offset elevation by point.
            </summary>
            <param name="point">The point.</param>
            <returns>A double[].</returns>
        </member>
        <member name="M:CivilConnection.Baseline.GetOffsetBaselinesAlignments">
            <summary>
            Returns Offset Alignments from the Baseline.
            </summary>
            <returns>The offset Alignments. Null if there are any.</returns>
        </member>
        <member name="M:CivilConnection.Baseline.GetFeaturelinesByCodeStation(System.String,System.Double)">
            <summary>
            Gets the featurelines by code and station
            </summary>
            <param name="code">the Featurelines code.</param>
            <param name="station">the station used to select the featurelines.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Baseline.GetFeaturelinesByCode_(System.String)">
            <summary>
            Gets the featurelines by code
            </summary>
            <param name="code">the Featurelines code.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Baseline.GetFeaturelinesByCode(System.String)">
            <summary>
            Gets the featurelines by code
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Baseline.GetFeaturelinesPointsByCode(System.String)">
            <summary>
            Gets points of the featurelines by code
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Baseline.ToString">
            <summary>
            Public textual representation of the Dynamo node preview
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:CivilConnection.BaselineRegion">
            <summary>
            BaselineRegion object type.
            </summary>
        </member>
        <member name="P:CivilConnection.BaselineRegion.InternalElement">
            <summary>
            Gets the internal element.
            </summary>
            <value>
            The internal element.
            </value>
        </member>
        <member name="P:CivilConnection.BaselineRegion.Start">
            <summary>
            Gets the region start station.
            </summary>
            <value>
            The start.
            </value>
        </member>
        <member name="P:CivilConnection.BaselineRegion.End">
            <summary>
            Gets theregion end station.
            </summary>
            <value>
            The end.
            </value>
        </member>
        <member name="P:CivilConnection.BaselineRegion.Stations">
            <summary>
            Gets the region stations.
            </summary>
            <value>
            The stations.
            </value>
        </member>
        <member name="P:CivilConnection.BaselineRegion.Subassemblies">
            <summary>
            Gets the region subassemblies.
            </summary>
            <value>
            The subassemblies.
            </value>
        </member>
        <member name="P:CivilConnection.BaselineRegion.RelativeStart">
            <summary>
            Gets the relative starting station for the BaselineRegion.
            </summary>
        </member>
        <member name="P:CivilConnection.BaselineRegion.RelativeEnd">
            <summary>
            Gets the relative ending station for the BaselineRegion.
            </summary>
        </member>
        <member name="P:CivilConnection.BaselineRegion.NormalizedStart">
            <summary>
            Gets the normalized starting station for the BaselineRegion.
            </summary>
        </member>
        <member name="P:CivilConnection.BaselineRegion.NormalizedEnd">
            <summary>
            Gets the normalized starting station for the BaselineRegion.
            </summary>
        </member>
        <member name="P:CivilConnection.BaselineRegion.Index">
            <summary>
            Gets the Baselineregion index value.
            </summary>
        </member>
        <member name="P:CivilConnection.BaselineRegion.Shapes_">
            <summary>
            Gets the Shapes profile of the applied subassemblies in the BaselineRegion.
            </summary>
        </member>
        <member name="P:CivilConnection.BaselineRegion.Shapes">
            <summary>
            Gets the Shapes profile of the applied subassemblies in the BaselineRegion.
            </summary>
        </member>
        <member name="P:CivilConnection.BaselineRegion.Links_">
            <summary>
            Gets the Links profile of the applied subassemblies in the BaselineRegion.
            </summary>
        </member>
        <member name="P:CivilConnection.BaselineRegion.Links">
            <summary>
            Gets the Links profile of the applied subassemblies in the BaselineRegion.
            </summary>
        </member>
        <member name="M:CivilConnection.BaselineRegion.#ctor(CivilConnection.Baseline,Autodesk.AECC.Interop.Roadway.AeccBaselineRegion,System.Int32)">
            <summary>
            Internal constructor
            </summary>
            <param name="baseline">The baseline that holds the baseline region.</param>
            <param name="blr">The internal AeccBaselineRegion</param>
            <param name="i">The baseline region index</param>
        </member>
        <member name="M:CivilConnection.BaselineRegion.ToString">
            <summary>
            Public textual representation of the Dynamo node preview
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:CivilConnection.MEP.CableTray">
            <summary>
            CableTray obejct type.
            </summary>
            <seealso cref="T:CivilConnection.AbstractMEPCurve" />
        </member>
        <member name="P:CivilConnection.MEP.CableTray.Run">
            <summary>
            Gets the run.
            </summary>
            <value>
            The run.
            </value>
        </member>
        <member name="M:CivilConnection.MEP.CableTray.#ctor(Autodesk.Revit.DB.Electrical.CableTray)">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.MEP.CableTray"/> class.
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:CivilConnection.MEP.CableTray.#ctor(Autodesk.Revit.DB.Electrical.CableTrayType,Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.XYZ)">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.MEP.CableTray"/> class.
            </summary>
            <param name="cableTrayType">Type of the cable tray.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:CivilConnection.MEP.CableTray.InitObject(Autodesk.Revit.DB.Electrical.CableTray)">
            <summary>
            Initialize a CableTray element.
            </summary>
            <param name="instance"></param>
        </member>
        <member name="M:CivilConnection.MEP.CableTray.InitObject(Autodesk.Revit.DB.Electrical.CableTrayType,Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.XYZ)">
            <summary>
            Initialize a CableTray element.
            </summary>
        </member>
        <member name="M:CivilConnection.MEP.CableTray.GetCableTrayByIds(System.Collections.Generic.ICollection{Autodesk.Revit.DB.ElementId})">
            <summary>
            Private method to get the CableTrays by ElementId
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MEP.CableTray.CableTrayByCurve(Revit.Elements.Element,Autodesk.DesignScript.Geometry.Curve)">
            <summary>
            CableTray by curve.
            </summary>
            <param name="cableTrayType">Type of the cable tray.</param>
            <param name="curve">The curve.</param>
            <returns>It Uses the start and end Points of the curve to create the CableTray</returns>
        </member>
        <member name="M:CivilConnection.MEP.CableTray.ByPolyCurve_(Revit.Elements.Element,Autodesk.DesignScript.Geometry.PolyCurve,System.Double)">
            <summary>
            Creates a set of CableTrays following a PolyCurve specifying a maximum length.
            </summary>
            <param name="CableTrayType">The CableTray type.</param>
            <param name="polyCurve">The PolyCurve to follow in WCS.</param>
            <param name="maxLength">The maximum length of the CableTrays following the PolyCurve.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MEP.CableTray.ByPoints(Revit.Elements.Element,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Creates a CableTray by two Points.
            </summary>
            <param name="cableTrayType">Type of the cable tray.</param>
            <param name="start">The start Point in WCS.</param>
            <param name="end">The end Point in WCS.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MEP.CableTray.ByRevitElement(Revit.Elements.Element)">
            <summary>
            Creates a Conduit by revit Conduit.
            </summary>
            <param name="element">The MEP Curve from Revit</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MEP.CableTray.ByCurve(Revit.Elements.Element,Autodesk.DesignScript.Geometry.Curve)">
            <summary>
            Creates a CableTray using the start and end points of a curve.
            </summary>
            <param name="cableTrayType">The CableTray Type.</param>
            <param name="curve">The Curve</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MEP.CableTray.ByCurveFeatureline(Revit.Elements.Element,Autodesk.DesignScript.Geometry.Curve,CivilConnection.Featureline)">
            <summary>
            CableTray by curve.
            </summary>
            <param name="cableTrayType">Type of the cable tray.</param>
            <param name="curve">The curve.</param>
            <param name="featureline">The featureline.</param>
            <returns>Associates the CableTray to a Featureline.</returns>
        </member>
        <member name="M:CivilConnection.MEP.CableTray.ByPolyCurve(Revit.Elements.Element,Autodesk.DesignScript.Geometry.PolyCurve,System.Double,CivilConnection.Featureline)">
            <summary>
            Creates a list of CableTrays from a PolyCurve.
            </summary>
            <param name="cableTrayType">Type of the cable tray.</param>
            <param name="polyCurve">The poly curve.</param>
            <param name="maxLength">The maximum length.</param>
            <param name="featureline">The featureline.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MEP.CableTray.ToString">
            <summary>
            Public textual representation of the Dynamo node preview
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:CivilConnection.MEP.Conduit">
            <summary>
            Conduit object type.
            </summary>
            <seealso cref="T:CivilConnection.AbstractMEPCurve" />
        </member>
        <member name="P:CivilConnection.MEP.Conduit.Diameter">
            <summary>
            Gets the diameter.
            </summary>
            <value>
            The diameter.
            </value>
        </member>
        <member name="P:CivilConnection.MEP.Conduit.Run">
            <summary>
            Gets the run.
            </summary>
            <value>
            The run.
            </value>
        </member>
        <member name="M:CivilConnection.MEP.Conduit.#ctor(Autodesk.Revit.DB.Electrical.Conduit)">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.MEP.Conduit"/> class.
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:CivilConnection.MEP.Conduit.#ctor(Autodesk.Revit.DB.Electrical.ConduitType,Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.XYZ)">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.MEP.Conduit"/> class.
            </summary>
            <param name="conduitType">Type of the conduit.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:CivilConnection.MEP.Conduit.#ctor">
            <summary>
            Returns an empty Conduit
            </summary>
        </member>
        <member name="M:CivilConnection.MEP.Conduit.InitObject(Autodesk.Revit.DB.Electrical.Conduit)">
            <summary>
            Initialize a Conduit element
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:CivilConnection.MEP.Conduit.InitObject(Autodesk.Revit.DB.Electrical.ConduitType,Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.XYZ)">
            <summary>
            Initialize a Conduit element
            </summary>
            <param name="conduitType">Type of the conduit.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:CivilConnection.MEP.Conduit.GetConduitByIds(System.Collections.Generic.ICollection{Autodesk.Revit.DB.ElementId})">
            <summary>
            Gets the conduit by ids.
            </summary>
            <param name="ids">The ids.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MEP.Conduit.ByPolyCurve(Revit.Elements.Element,Autodesk.DesignScript.Geometry.PolyCurve)">
            <summary>
            Create Conduits following a polycurve
            </summary>
            <param name="conduitType">The conduit type.</param>
            <param name="polyCurve">the Polycurve to follow.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MEP.Conduit.ByPolyCurve(Revit.Elements.Element,Autodesk.DesignScript.Geometry.PolyCurve,System.Double,CivilConnection.Featureline)">
            <summary>
            Creates a list of Conduits from a PolyCurve.
            </summary>
            <param name="conduitType">Type of the conduit.</param>
            <param name="polyCurve">The poly curvein WCS.</param>
            <param name="maxLength">The maximum length.</param>
            <param name="featureline">The featureline.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MEP.Conduit.ByPoints(Revit.Elements.Element,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Creates a Conduit by two points.
            </summary>
            <param name="conduitType">Type of the conduit.</param>
            <param name="start">The start point.</param>
            <param name="end">The end point.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MEP.Conduit.ByCurve(Revit.Elements.Element,Autodesk.DesignScript.Geometry.Curve)">
            <summary>
            Creates a Conduit by a curve.
            </summary>
            <param name="conduitType">Type of the conduit.</param>
            <param name="curve">The curve.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MEP.Conduit.ByCurveFeatureline(Revit.Elements.Element,Autodesk.DesignScript.Geometry.Curve,CivilConnection.Featureline)">
            <summary>
            Creates a Conduit by a curve.
            </summary>
            <param name="conduitType">Type of the conduit.</param>
            <param name="curve">The curve.</param>
            <param name="featureline">The featureline.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MEP.Conduit.ByRevitElement(Revit.Elements.Element)">
            <summary>
            Creates a Conduit by revit Conduit.
            </summary>
            <param name="element">The MEP Curve from Revit</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MEP.Conduit.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:CivilConnection.MEP.Connector">
            <summary>
            Connector object type.
            </summary>
            <seealso cref="T:Revit.Elements.Element" />
        </member>
        <member name="P:CivilConnection.MEP.Connector.InternalConnector">
            <summary>
            Gets the internal connector.
            </summary>
            <value>
            The internal connector.
            </value>
        </member>
        <member name="P:CivilConnection.MEP.Connector.Origin">
            <summary>
            Gets the origin.
            </summary>
            <value>
            The origin.
            </value>
        </member>
        <member name="P:CivilConnection.MEP.Connector.MEPSystem">
            <summary>
            Gets the mep system.
            </summary>
            <value>
            The mep system.
            </value>
        </member>
        <member name="P:CivilConnection.MEP.Connector.ConnectorManager">
            <summary>
            Gets the connector manager.
            </summary>
            <value>
            The connector manager.
            </value>
        </member>
        <member name="P:CivilConnection.MEP.Connector.AllRefs">
            <summary>
            Gets all refs.
            </summary>
            <value>
            All refs.
            </value>
        </member>
        <member name="P:CivilConnection.MEP.Connector.Domain">
            <summary>
            Gets the domain.
            </summary>
            <value>
            The domain.
            </value>
        </member>
        <member name="P:CivilConnection.MEP.Connector.Direction">
            <summary>
            Gets the direction.
            </summary>
            <value>
            The direction.
            </value>
        </member>
        <member name="P:CivilConnection.MEP.Connector.Owner">
            <summary>
            Gets the owner.
            </summary>
            <value>
            The owner.
            </value>
        </member>
        <member name="P:CivilConnection.MEP.Connector.ConnectorType">
            <summary>
            Gets the type of the connector.
            </summary>
            <value>
            The type of the connector.
            </value>
        </member>
        <member name="P:CivilConnection.MEP.Connector.InternalCoordianteSystem">
            <summary>
            Gets the internal coordiante system.
            </summary>
            <value>
            The internal coordiante system.
            </value>
        </member>
        <member name="P:CivilConnection.MEP.Connector.IsConnected">
            <summary>
            Gets a value indicating whether this instance is connected.
            </summary>
            <value>
              <c>true</c> if this instance is connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CivilConnection.MEP.Connector.Shape">
            <summary>
            Gets the shape.
            </summary>
            <value>
            The shape.
            </value>
        </member>
        <member name="P:CivilConnection.MEP.Connector.ConnectorId">
            <summary>
            Gets the connector identifier.
            </summary>
            <value>
            The connector identifier.
            </value>
        </member>
        <member name="P:CivilConnection.MEP.Connector.InternalElement">
            <summary>
            A reference to the element
            </summary>
        </member>
        <member name="M:CivilConnection.MEP.Connector.InternalSetConnector(Autodesk.Revit.DB.Connector)">
            <summary>
            Internals the set connector.
            </summary>
            <param name="fi">The Revit connector</param>
        </member>
        <member name="M:CivilConnection.MEP.Connector.InternalSetAngle(System.Double)">
            <summary>
            Method to set the angle.
            </summary>
            <param name="angle">The angle.</param>
        </member>
        <member name="M:CivilConnection.MEP.Connector.InternalSetHeight(System.Double)">
            <summary>
             Method to set the height.
            </summary>
            <param name="height">The height.</param>
        </member>
        <member name="M:CivilConnection.MEP.Connector.InternalSetOrigin(Autodesk.Revit.DB.XYZ)">
            <summary>
            Internals the set origin.
            </summary>
            <param name="origin">The origin.</param>
        </member>
        <member name="M:CivilConnection.MEP.Connector.InternalSetRadius(System.Double)">
            <summary>
            Method to set the radius.
            </summary>
            <param name="radius">The radius.</param>
        </member>
        <member name="M:CivilConnection.MEP.Connector.InternalSetWidth(System.Double)">
            <summary>
            Method to set the width.
            </summary>
            <param name="width">The width.</param>
        </member>
        <member name="M:CivilConnection.MEP.Connector.InitObject(Autodesk.Revit.DB.Connector)">
            <summary>
            Initialize a Connector
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:CivilConnection.MEP.Connector.#ctor(Autodesk.Revit.DB.Connector)">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.MEP.Connector"/> class.
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="T:CivilConnection.MEP.Duct">
            <summary>
            Duct object type.
            </summary>
            <seealso cref="T:CivilConnection.AbstractMEPCurve" />
        </member>
        <member name="P:CivilConnection.MEP.Duct.Diameter">
            <summary>
            Gets the diameter.
            </summary>
            <value>
            The diameter.
            </value>
        </member>
        <member name="M:CivilConnection.MEP.Duct.#ctor(Autodesk.Revit.DB.Mechanical.Duct)">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.MEP.Duct"/> class.
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:CivilConnection.MEP.Duct.#ctor(Autodesk.Revit.DB.Mechanical.DuctType,Autodesk.Revit.DB.Mechanical.MechanicalSystemType,Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.Level)">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.MEP.Duct"/> class.
            </summary>
            <param name="pipeType">Type of the pipe.</param>
            <param name="systemType">Type of the system.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="level">The level.</param>
        </member>
        <member name="M:CivilConnection.MEP.Duct.InitPipe(Autodesk.Revit.DB.Mechanical.Duct)">
            <summary>
            Initialize a Duct element
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:CivilConnection.MEP.Duct.InitPipe(Autodesk.Revit.DB.Mechanical.DuctType,Autodesk.Revit.DB.Mechanical.MechanicalSystemType,Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.Level)">
            <summary>
            Initialize a Duct element
            </summary>
            <param name="pipeType">Type of the pipe.</param>
            <param name="systemType">Type of the system.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="level">The level.</param>
        </member>
        <member name="M:CivilConnection.MEP.Duct.InternalSetPipingSystemType(Autodesk.Revit.DB.Mechanical.MechanicalSystemType)">
            <summary>
            Internals the type of the set piping system.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:CivilConnection.MEP.Duct.GetDuctsByIds(System.Collections.Generic.ICollection{Autodesk.Revit.DB.ElementId})">
            <summary>
            Gets the ducts by ids.
            </summary>
            <param name="ids">The ids.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MEP.Duct.ByPoints(Revit.Elements.Element,Revit.Elements.Element,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Revit.Elements.Level)">
            <summary>
            Creates a pipe by two points.
            </summary>
            <param name="ductType">Type of the duct.</param>
            <param name="mechanicalSystemType">Type of the mechanical system.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="level">The level.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MEP.Duct.ByRevitElement(Revit.Elements.Element)">
            <summary>
            Creates a Conduit by revit Conduit.
            </summary>
            <param name="element">The MEP Curve from Revit</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MEP.Duct.ByCurve(Revit.Elements.Element,Revit.Elements.Element,Autodesk.DesignScript.Geometry.Curve,Revit.Elements.Level)">
            <summary>
            Creates a pipe by curve.
            </summary>
            <param name="ductType">Type of the duct.</param>
            <param name="mechanicalSystemType">Type of the mechanical system.</param>
            <param name="curve">The curve.</param>
            <param name="level">The level.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MEP.Duct.ByCurveFeatureline(Revit.Elements.Element,Revit.Elements.Element,Revit.Elements.Level,Autodesk.DesignScript.Geometry.Curve,CivilConnection.Featureline)">
            <summary>
            Creates a pipe by curve.
            </summary>
            <param name="ductType">Type of the duct.</param>
            <param name="mechanicalSystemType">Type of the mechanical system.</param>
            <param name="level">The level.</param>
            <param name="curve">The curve.</param>
            <param name="featureline">The featureline.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MEP.Duct.ByPolyCurve(Revit.Elements.Element,Revit.Elements.Element,Autodesk.DesignScript.Geometry.PolyCurve,Revit.Elements.Level,System.Double,CivilConnection.Featureline)">
            <summary>
            Creates a pipe by PolyCurve.
            </summary>
            <param name="ductType">Type of the duct.</param>
            <param name="mechanicalSystemType">Type of the mechanical system.</param>
            <param name="polyCurve">The poly curve.</param>
            <param name="level">The level.</param>
            <param name="maxLength">The maximum length.</param>
            <param name="featureline">The featureline.</param>
            <returns></returns>
        </member>
        <member name="T:CivilConnection.MEP.Fitting">
            <summary>
            Fitting obejct type.
            </summary>
            <seealso cref="T:Revit.Elements.AbstractFamilyInstance" />
        </member>
        <member name="M:CivilConnection.MEP.Fitting.#ctor(Autodesk.Revit.DB.FamilyInstance)">
            <summary>
            Wrap an existing Fitting.
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:CivilConnection.MEP.Fitting.#ctor(Autodesk.Revit.DB.Connector,Autodesk.Revit.DB.Connector,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.MEP.Fitting"/> class.
            </summary>
            <param name="c1">The first connector.</param>
            <param name="c2">The second connector.</param>
            <param name="partType">Type of the part.</param>
        </member>
        <member name="M:CivilConnection.MEP.Fitting.#ctor(Autodesk.Revit.DB.Connector,Autodesk.Revit.DB.Connector,Autodesk.Revit.DB.Connector)">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.MEP.Fitting"/> class.
            </summary>
            <param name="c1">The first connector.</param>
            <param name="c2">The second connector.</param>
            <param name="c3">The third connector.</param>
        </member>
        <member name="M:CivilConnection.MEP.Fitting.#ctor(Autodesk.Revit.DB.Connector,Autodesk.Revit.DB.Connector,Autodesk.Revit.DB.Connector,Autodesk.Revit.DB.Connector)">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.MEP.Fitting"/> class.
            </summary>
            <param name="c1">The first connector.</param>
            <param name="c2">The second connector.</param>
            <param name="c3">The third connector.</param>
            <param name="c4">The fourth connector.</param>
        </member>
        <member name="M:CivilConnection.MEP.Fitting.#ctor(Autodesk.Revit.DB.Connector,Autodesk.Revit.DB.MEPCurve)">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.MEP.Fitting"/> class.
            </summary>
            <param name="c1">The connector.</param>
            <param name="curve">The curve.</param>
        </member>
        <member name="M:CivilConnection.MEP.Fitting.InitFitting(Autodesk.Revit.DB.FamilyInstance)">
            <summary>
            Initializes the fitting.
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:CivilConnection.MEP.Fitting.InitElbowObject(Autodesk.Revit.DB.Connector,Autodesk.Revit.DB.Connector)">
            <summary>
            Initializes the elbow object.
            </summary>
            <param name="c1">The first connector.</param>
            <param name="c2">The second connector.</param>
        </member>
        <member name="M:CivilConnection.MEP.Fitting.InitUnionObject(Autodesk.Revit.DB.Connector,Autodesk.Revit.DB.Connector)">
            <summary>
            Initializes the union object.
            </summary>
            <param name="c1">The first connector.</param>
            <param name="c2">The second connector.</param>
        </member>
        <member name="M:CivilConnection.MEP.Fitting.InitConnection(Autodesk.Revit.DB.Connector,Autodesk.Revit.DB.Connector)">
            <summary>
            Initializes the connection.
            </summary>
            <param name="c1">The first connector.</param>
            <param name="c2">The second connector.</param>
        </member>
        <member name="M:CivilConnection.MEP.Fitting.InitTransitionObject(Autodesk.Revit.DB.Connector,Autodesk.Revit.DB.Connector)">
            <summary>
            Initializes the transition object.
            </summary>
            <param name="c1">The first connector.</param>
            <param name="c2">The second connector.</param>
        </member>
        <member name="M:CivilConnection.MEP.Fitting.InitTeeObject(Autodesk.Revit.DB.Connector,Autodesk.Revit.DB.Connector,Autodesk.Revit.DB.Connector)">
            <summary>
            Initializes the tee object.
            </summary>
            <param name="c1">The first connector.</param>
            <param name="c2">The second connector.</param>
            <param name="c3">The third connector.</param>
        </member>
        <member name="M:CivilConnection.MEP.Fitting.InitCrossObject(Autodesk.Revit.DB.Connector,Autodesk.Revit.DB.Connector,Autodesk.Revit.DB.Connector,Autodesk.Revit.DB.Connector)">
            <summary>
            Initializes the cross object.
            </summary>
            <param name="c1">The first connector.</param>
            <param name="c2">The second connector.</param>
            <param name="c3">The third connector.</param>
            <param name="c4">The fourth connector.</param>
        </member>
        <member name="M:CivilConnection.MEP.Fitting.InitTakeoffObject(Autodesk.Revit.DB.Connector,Autodesk.Revit.DB.MEPCurve)">
            <summary>
            Initializes the takeoff object.
            </summary>
            <param name="c1">The conenctor.</param>
            <param name="curve">The curve.</param>
        </member>
        <member name="M:CivilConnection.MEP.Fitting.Connectors">
            <summary>
            Connectorses this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MEP.Fitting.Elbow(CivilConnection.AbstractMEPCurve,CivilConnection.AbstractMEPCurve)">
            <summary>
            Creates an elbow fitting.
            </summary>
            <param name="curve1">The curve1.</param>
            <param name="curve2">The curve2.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MEP.Fitting.Union(CivilConnection.AbstractMEPCurve,CivilConnection.AbstractMEPCurve)">
            <summary>
            Creates an union fitting.
            </summary>
            <param name="curve1">The curve1.</param>
            <param name="curve2">The curve2.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MEP.Fitting.Transition(CivilConnection.AbstractMEPCurve,CivilConnection.AbstractMEPCurve)">
            <summary>
            Creates a transition fitting.
            </summary>
            <param name="curve1">The curve1.</param>
            <param name="curve2">The curve2.</param>
            <returns></returns>
        </member>
        <member name="T:CivilConnection.MEP.Pipe">
            <summary>
            Pipe obejct type.
            </summary>
            <seealso cref="T:CivilConnection.AbstractMEPCurve" />
        </member>
        <member name="P:CivilConnection.MEP.Pipe.Diameter">
            <summary>
            Gets the diameter.
            </summary>
            <value>
            The diameter.
            </value>
        </member>
        <member name="M:CivilConnection.MEP.Pipe.#ctor(Autodesk.Revit.DB.Plumbing.Pipe)">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.MEP.Pipe"/> class.
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:CivilConnection.MEP.Pipe.#ctor(Autodesk.Revit.DB.Plumbing.PipeType,Autodesk.Revit.DB.Plumbing.PipingSystemType,Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.Level)">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.MEP.Pipe"/> class.
            </summary>
            <param name="pipeType">Type of the pipe.</param>
            <param name="systemType">Type of the system.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="level">The level.</param>
        </member>
        <member name="M:CivilConnection.MEP.Pipe.InitObject(Autodesk.Revit.DB.Plumbing.Pipe)">
            <summary>
            Initialize a Pipe element
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:CivilConnection.MEP.Pipe.InitObject(Autodesk.Revit.DB.Plumbing.PipeType,Autodesk.Revit.DB.Plumbing.PipingSystemType,Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.Level)">
            <summary>
            Initialize a Pipe element
            </summary>
            <param name="pipeType">Type of the pipe.</param>
            <param name="pipingSystemType">Type of the piping system.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="level">The level.</param>
        </member>
        <member name="M:CivilConnection.MEP.Pipe.InternalSetPipingSystemType(Autodesk.Revit.DB.Plumbing.PipingSystemType)">
            <summary>
            Internals the type of the set piping system.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:CivilConnection.MEP.Pipe.GetPipesByIds(System.Collections.Generic.ICollection{Autodesk.Revit.DB.ElementId})">
            <summary>
            Gets the pipes by ids.
            </summary>
            <param name="ids">The ids.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MEP.Pipe.ByPoints(Revit.Elements.Element,Revit.Elements.Element,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Revit.Elements.Level)">
            <summary>
            Creates a pipe by two points.
            </summary>
            <param name="pipeType">Type of the pipe.</param>
            <param name="pipingSystemType">Type of the piping system.</param>
            <param name="start">The start point.</param>
            <param name="end">The end point.</param>
            <param name="level">The level.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MEP.Pipe.ByRevitElement(Revit.Elements.Element)">
            <summary>
            Creates a Conduit by revit Conduit.
            </summary>
            <param name="element">The MEP Curve from Revit</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MEP.Pipe.ByCurve(Revit.Elements.Element,Revit.Elements.Element,Autodesk.DesignScript.Geometry.Curve,Revit.Elements.Level)">
            <summary>
            Creates a pipe by curve.
            </summary>
            <param name="pipeType">Type of the pipe.</param>
            <param name="pipingSystemType">Type of the piping system.</param>
            <param name="curve">The curve.</param>
            <param name="level">The level.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MEP.Pipe.ByCurveFeatureline(Revit.Elements.Element,Revit.Elements.Element,Revit.Elements.Level,Autodesk.DesignScript.Geometry.Curve,CivilConnection.Featureline)">
            <summary>
            Creates a pipe by curve.
            </summary>
            <param name="pipeType">Type of the pipe.</param>
            <param name="pipingSystemType">Type of the piping system.</param>
            <param name="level">The level.</param>
            <param name="curve">The curve.</param>
            <param name="featureline">The featureline.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MEP.Pipe.ByPolyCurve(Revit.Elements.Element,Revit.Elements.Element,Autodesk.DesignScript.Geometry.PolyCurve,Revit.Elements.Level,System.Double,CivilConnection.Featureline)">
            <summary>
            Creates a pipe by PolyCurve.
            </summary>
            <param name="pipeType">Type of the pipe.</param>
            <param name="pipingSystemType">Type of the piping system.</param>
            <param name="polyCurve">The poly curve.</param>
            <param name="level">The level.</param>
            <param name="maxLength">The maximum length.</param>
            <param name="featureline">The featureline.</param>
            <returns></returns>
        </member>
        <member name="T:CivilConnection.MEP.PipePlaceHolder">
            <summary>
            PipePlaceHolder obejct type.
            </summary>
            <seealso cref="T:CivilConnection.AbstractMEPCurve" />
        </member>
        <member name="M:CivilConnection.MEP.PipePlaceHolder.#ctor(Autodesk.Revit.DB.Plumbing.Pipe)">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.MEP.PipePlaceHolder"/> class.
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:CivilConnection.MEP.PipePlaceHolder.#ctor(Autodesk.Revit.DB.Plumbing.PipeType,Autodesk.Revit.DB.Plumbing.PipingSystemType,Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.Level)">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.MEP.PipePlaceHolder"/> class.
            </summary>
            <param name="pipeType">Type of the pipe.</param>
            <param name="systemType">Type of the system.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="level">The level.</param>
        </member>
        <member name="M:CivilConnection.MEP.PipePlaceHolder.InitPipe(Autodesk.Revit.DB.Plumbing.Pipe)">
            <summary>
            Initialize a Pipe element.
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:CivilConnection.MEP.PipePlaceHolder.InitPipe(Autodesk.Revit.DB.Plumbing.PipeType,Autodesk.Revit.DB.Plumbing.PipingSystemType,Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.Level)">
            <summary>
            Initialize a Pipe element.
            </summary>
            <param name="pipeType">Type of the pipe.</param>
            <param name="systemType">Type of the system.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="level">The level.</param>
        </member>
        <member name="M:CivilConnection.MEP.PipePlaceHolder.InternalSetPipingSystemType(Autodesk.Revit.DB.Plumbing.PipingSystemType)">
            <summary>
            Internals the type of the set piping system.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:CivilConnection.MEP.PipePlaceHolder.ByPoints(Revit.Elements.Element,Revit.Elements.Element,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Revit.Elements.Level)">
            <summary>
            Creates a PipePlaceholder by two points.
            </summary>
            <param name="pipeType">Type of the pipe.</param>
            <param name="systemType">Type of the system.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="level">The level.</param>
            <returns></returns>
        </member>
        <member name="T:CivilConnection.CivilApplication">
            <summary>
            CivilApplication object type.
            </summary>
        </member>
        <member name="F:CivilConnection.CivilApplication.Documents">
            <summary>
            The documents in Civil 3D.
            </summary>
        </member>
        <member name="F:CivilConnection.CivilApplication.LandXMLPath">
            <summary>
            The land XML path.
            </summary>
        </member>
        <member name="F:CivilConnection.CivilApplication.ActiveDocument">
            <summary>
            The active document
            </summary>
        </member>
        <member name="F:CivilConnection.CivilApplication.mApp">
            <summary>
            The active application
            </summary>
        </member>
        <member name="P:CivilConnection.CivilApplication.InternalElement">
            <summary>
            Gets the internal element.
            </summary>
            <value>
            The internal element.
            </value>
        </member>
        <member name="M:CivilConnection.CivilApplication.GetApplication">
            <summary>
            Gets the application.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilApplication.#ctor">
            <summary>
            Creates the connection with the running session of Civil 3D.
            </summary>
        </member>
        <member name="M:CivilConnection.CivilApplication.GetDocuments">
            <summary>
            Returns the list of Civil Documents opened in Civil 3D.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilApplication.GetDocumentByName(System.String)">
            <summary>
            Returns the Civil Documents opened in Civil 3D with the same name.
            </summary>
            <param name="name">The Document name</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilApplication.UpdatePeriodically">
            <summary>
            Enables the Run Periodically mode and updates the connection with Civil 3D.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilApplication.WriteToLog(System.Object,System.String)">
            <summary>
            Writes a message to the log file
            </summary>
            <param name="data">The data that is passed through</param>
            <param name="message">An optional message to write to the log.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilApplication.ToString">
            <summary>
            Public textual representation of the Dynamo node preview.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:CivilConnection.CivilDocument">
            <summary>
            The CivilDocument class
            </summary>
        </member>
        <member name="F:CivilConnection.CivilDocument._document">
            <summary>
            The document
            </summary>
        </member>
        <member name="P:CivilConnection.CivilDocument.Name">
            <summary>
            The document name.
            </summary>
        </member>
        <member name="F:CivilConnection.CivilDocument._corridors">
            <summary>
            The corridors
            </summary>
        </member>
        <member name="F:CivilConnection.CivilDocument._alignments">
            <summary>
            The alignments
            </summary>
        </member>
        <member name="F:CivilConnection.CivilDocument._surfaces">
            <summary>
            The Surfaces
            </summary>
        </member>
        <member name="P:CivilConnection.CivilDocument.InternalElement">
            <summary>
            Gets the internal element.
            </summary>
            <value>
            The internal element.
            </value>
        </member>
        <member name="M:CivilConnection.CivilDocument.#ctor(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.CivilDocument"/> class.
            </summary>
            <param name="_doc">The document.</param>
        </member>
        <member name="M:CivilConnection.CivilDocument.DumpLandXML">
            <summary>
            Creates a LandXML from the Civil Document
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilDocument.GetLandFeaturelines(System.String)">
            <summary>
            Gets the land featurelines.
            </summary>
            <param name="xmlPath">The XML path for the LandFeaturerline properties.</param>
            <returns></returns>
            
        </member>
        <member name="M:CivilConnection.CivilDocument.GetCorridors">
            <summary>
            Gets the corridors.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilDocument.GetCorridorByName(System.String)">
            <summary>
            Get the corridor by name.
            </summary>
            <param name="name">The corridor name.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilDocument.GetAlignments">
            <summary>
            Gets the alignments.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilDocument.GetAlignmentByName(System.String)">
            <summary>
            Gets alignment by name.
            </summary>
            <param name="name">The alignment name.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilDocument.GetSurfaces">
            <summary>
            Gets all surfaces in the document
            </summary>
            <returns>
            List of surfaces
            </returns>
        </member>
        <member name="M:CivilConnection.CivilDocument.GetSurfaceByName(System.String)">
            <summary>
            Gets surface by name.
            </summary>
            <param name="name">The name of the surface</param>
            <returns>
            Civil Surface
            </returns>
        </member>
        <member name="M:CivilConnection.CivilDocument.AddArc(Autodesk.DesignScript.Geometry.Arc,System.String)">
            <summary>
            Adds the arc to the document.
            </summary>
            <param name="arc">The arc.</param>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilDocument.AddCircle(Autodesk.DesignScript.Geometry.Circle,System.String)">
            <summary>
            Adds the circle to the document.
            </summary>
            <param name="circle">The circle.</param>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilDocument.AddLWPolylineByPoints(System.Collections.Generic.IList{Autodesk.DesignScript.Geometry.Point},System.String)">
            <summary>
            Adds the 2D polyline by points.
            </summary>
            <param name="points">The points.</param>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilDocument.AddPolylineByCurve(Autodesk.DesignScript.Geometry.Curve,System.String)">
            <summary>
            Adds the 3D polyline by curve.
            </summary>
            <param name="curve">The curve.</param>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilDocument.AddPolylineByCurve(System.Collections.Generic.IList{Autodesk.DesignScript.Geometry.Curve},System.String)">
            <summary>
            Adds the 3D polylines by curve.
            </summary>
            <param name="curves">The curves.</param>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilDocument.AddRegionByPatch(Autodesk.DesignScript.Geometry.Curve,System.String)">
            <summary>
            Adds the region by closed profile.
            </summary>
            <param name="closedCurve">The closed curve.</param>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilDocument.AddExtrudedSolidByPoints(System.Collections.Generic.IList{Autodesk.DesignScript.Geometry.Point},System.Double,System.String)">
            <summary>
            Creates a closed profile form the points and adds the extruded solid.
            </summary>
            <param name="points">The points.</param>
            <param name="height">The height. By Default is equal to 1.</param>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilDocument.AddExtrudedSolidByPatch(Autodesk.DesignScript.Geometry.Curve,System.Double,System.String)">
            <summary>
            Adds the extruded solid by closed profile.
            </summary>
            <param name="closedCurve">The closed curve.</param>
            <param name="height">The height. By Default is equal to 1.</param>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilDocument.AddExtrudedSolidByCurves(System.Collections.Generic.IList{Autodesk.DesignScript.Geometry.Curve},System.Double,System.String)">
            <summary>
            Adds multiple extruded solid by closed curves.
            </summary>
            <param name="curves">The curves.</param>
            <param name="height">The height. By Default is equal to 1.</param>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilDocument.AddLayer(System.String)">
            <summary>
            Adds a new layer to the Civil Document by name.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilDocument.AddText(System.String,Autodesk.DesignScript.Geometry.Point,System.Double,System.String,Autodesk.DesignScript.Geometry.CoordinateSystem)">
            <summary>
            Creates a text in the CivilDocument and rotates it to match the plane.
            </summary>
            <param name="text">The text.</param>
            <param name="point">The point.</param>
            <param name="textHeight">Height of the text.</param>
            <param name="layer">The layer.</param>
            <param name="cs">The cs.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilDocument.CutSolidsByPatch(Autodesk.DesignScript.Geometry.Curve,System.Double,System.String)">
            <summary>
            Creates an extrusion based on a closed curve (Polycurve, Polygon or Rectangle) profile to be used to cut the solids in the Civil Document.
            </summary>
            <param name="closedCurve">The closed curve.</param>
            <param name="height">The height. By Default is equal to 1.</param>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilDocument.CutSolidsByCurves(System.Collections.Generic.IList{Autodesk.DesignScript.Geometry.Curve},System.Double,System.String)">
            <summary>
            Creates an extrusion based on a profile defined by a set of curves profile to be used to cut the solids in the Civil Document.
            </summary>
            <param name="closedCurves">The closed curves.</param>
            <param name="height">The height. By Default is equal to 1.</param>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilDocument.CutSolidsByGeometry(Autodesk.DesignScript.Geometry.Geometry[],System.String)">
            <summary>
            Creates a solid to be used to cut the solids in the Civil 3D Document.
            </summary>
            <param name="geometry">The solid geometry.</param>
            <param name="layer">The layer where to crerate the cutting solid.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilDocument.ImportGeometry(Autodesk.DesignScript.Geometry.Geometry[],System.String)">
            <summary>
            Import the geometry from Dynamo into the Civil 3D Document.
            </summary>
            <param name="geometry">The geometry.</param>
            <param name="layer">The layer where to crerate the solid.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilDocument.LinkElement(Revit.Elements.Element,System.String,System.String)">
            <summary>
            Links the geometry associated to a Revit object into Civil 3D.
            </summary>
            <param name="element">The element.</param>
            <param name="parameter">The parameter.</param>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilDocument.SendCommand(System.String)">
            <summary>
            Send Command to the Civil Document.
            </summary>
            <param name="command">The command.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilDocument.SliceSolidsByPlane(Autodesk.DesignScript.Geometry.Plane)">
            <summary>
            Slices the solids in Civil 3D using a Dynamo Plane.
            </summary>
            <param name="plane">The plane.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilDocument.AddCivilPoint(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Adds the civil point.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilDocument.AddCivilPointGroup(Autodesk.DesignScript.Geometry.Point[],System.String)">
            <summary>
            Adds the civil point group.
            </summary>
            <param name="points">The points.</param>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilDocument.GetPointGroups">
            <summary>
            Gets the Civil point groups.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilDocument.AddTINSurfaceByPoints(Autodesk.DesignScript.Geometry.Point[],System.String,System.String)">
            <summary>
            Adds the tin surface by points.
            </summary>
            <param name="points">The points.</param>
            <param name="name">The name.</param>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilDocument.ToString">
            <summary>
            Public textual representation of the Dynamo node preview
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:CivilConnection.CivilSurface">
            <summary>
            Civil 3D Surface object
            </summary>
        </member>
        <member name="P:CivilConnection.CivilSurface.Name">
            <summary>
            Gets the name of surface
            </summary>
            <value>
            Name of surface
            </value>
        </member>
        <member name="P:CivilConnection.CivilSurface.SurfaceType">
            <summary>
            Gets the surface type
            </summary>
        </member>
        <member name="P:CivilConnection.CivilSurface.InternalElement">
            <summary>
            Gets the internal element
            </summary>
        </member>
        <member name="M:CivilConnection.CivilSurface.#ctor(Autodesk.AECC.Interop.Land.AeccSurface)">
            <summary>
            Internal constructor
            </summary>
            <param name="surface">the internal AeccSurface</param>
        </member>
        <member name="M:CivilConnection.CivilSurface.GetElevationAtPoint(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Point})">
            <summary>
            Get elevation of surface at points
            </summary>
            <param name="points">The points to process</param>
            <returns>
            The List of Elevations
            </returns>
        </member>
        <member name="M:CivilConnection.CivilSurface.GetElevationsAlongLine(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Line})">
            <summary>
            Gets all surface points along line
            </summary>
            <param name="lines">The lines to process</param>
            <returns>
            The List of Points
            </returns>
        </member>
        <member name="M:CivilConnection.CivilSurface.GetPointsAlongLine(System.Collections.Generic.List{Autodesk.DesignScript.Geometry.Line})">
            <summary>
            Gets all surface points along line
            </summary>
            <param name="lines">The lines to process</param>
            <returns>
            The List of Points
            </returns>
        </member>
        <member name="M:CivilConnection.CivilSurface.GetSurfacePoints">
            <summary>
            Get all surface points
            </summary>
            <returns>
            The List of Points
            </returns>
        </member>
        <member name="M:CivilConnection.CivilSurface.GetPointsBetweenLowerUpperLimits(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Gets all surface points between lower and upper limit points.
            </summary>
            <param name="lowerLeftPoint">The minmum point.</param>
            <param name="upperRightPoint">The maximum pont.</param>
            <returns>
            The List of Points
            </returns>
        </member>
        <member name="M:CivilConnection.CivilSurface.GetPointsInBoundingBox(Autodesk.DesignScript.Geometry.BoundingBox)">
            <summary>
            Gets all surface points in the BoundingBox.
            </summary>
            <param name="boundingBox">The BoundingBox used for the containment test.</param>
            <returns>
            The List of Points
            </returns>
        </member>
        <member name="M:CivilConnection.CivilSurface.GetPointsInBoundary(Autodesk.DesignScript.Geometry.Curve,System.Double)">
            <summary>
            Get surface points inside a closed boundary
            </summary>
            <param name="boundary">A closed curve</param>
            <param name="tolerance">A value between 0 and 1 to define the precision of the tessellation along non-straight curves.</param>
            <returns>
            The List of Points
            </returns>
        </member>
        <member name="M:CivilConnection.CivilSurface.GetTrianglesSurfaces">
            <summary>
            Gets all the triangle surfaces in a CivilSurface
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilSurface.GetTrianglesSurfaces(System.String,System.Boolean)">
            <summary>
            Gets all the triangle surfaces in a CivilSurface via LandXML
            </summary>
            <param name="landXMLpath">The path to the LandXML that contains the surface export</param>
            <param name="onlyVisible">Processes only the visible faces</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilSurface.GetFacesSurfaces(System.String,System.Boolean)">
            <summary>
            Gets all the triangle faces in a CivilSurface via LandXML
            </summary>
            <param name="landXMLpath">The path to the LandXML that contains the surface export</param>
            <param name="onlyVisible">Processes only the visible faces</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilSurface.JoinSurfaces(System.Collections.Generic.IList{Autodesk.DesignScript.Geometry.Surface},System.Int32)">
            <summary>
            Joins the surfaces recursively into a Polysurface
            </summary>
            <param name="surfaces">The surfaces to join</param>
            <param name="limit">The amount of surfaces to join with recursion</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.CivilSurface.GetIntersectionPoint(Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Get intersection point between the line with start point and direction on the surface 
            </summary>
            <param name="point">The point to process</param>
            <param name="vector">The direction vector</param>
            <returns>
            The intersection point
            </returns>
        </member>
        <member name="M:CivilConnection.CivilSurface.ToString">
            <summary>
            Public textual representation in the Dynamo node preview.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:CivilConnection.Corridor">
            <summary>
            Corridor obejct type.
            </summary>
        </member>
        <member name="F:CivilConnection.Corridor._corridor">
            <summary>
            The corridor
            </summary>
        </member>
        <member name="F:CivilConnection.Corridor._baselines">
            <summary>
            The baselines
            </summary>
        </member>
        <member name="F:CivilConnection.Corridor._document">
            <summary>
            The document
            </summary>
        </member>
        <member name="F:CivilConnection.Corridor._shapes">
            <summary>
            Corridor Applied Subassembly Shapes
            </summary>
        </member>
        <member name="F:CivilConnection.Corridor._links">
            <summary>
            Corridor Applied Subassembly Links
            </summary>
        </member>
        <member name="F:CivilConnection.Corridor._corridorFeaturelinesXMLExported">
            <summary>
            Indicates if the corridor feature lines have been already extracted
            </summary>
        </member>
        <member name="P:CivilConnection.Corridor.Baselines">
            <summary>
            Gets the baselines.
            </summary>
            <value>
            The baselines.
            </value>
        </member>
        <member name="P:CivilConnection.Corridor.Name">
            <summary>
            Gets the Corridor name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:CivilConnection.Corridor.InternalElement">
            <summary>
            Gets the internal element.
            </summary>
            <value>
            The internal element.
            </value>
        </member>
        <member name="P:CivilConnection.Corridor.Shapes">
            <summary>
            Gets the corridor applied subassembly shapes.
            </summary>
        </member>
        <member name="P:CivilConnection.Corridor.Links">
            <summary>
            Gets the corridor applied subassembly links.
            </summary>
        </member>
        <member name="M:CivilConnection.Corridor.#ctor(Autodesk.AECC.Interop.Roadway.AeccCorridor,Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.Corridor"/> class.
            </summary>
            <param name="corridor">The corridor.</param>
            <param name="doc">The document.</param>
        </member>
        <member name="M:CivilConnection.Corridor.Rebuild">
            <summary>
            Rebuilds the Corridor in Civil 3D.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Corridor.GetPointsBySubassembly">
            <summary>
            Returns the points that define the subassemblies in a corridor organized by:
            Corridor &gt; Baseline &gt; Region &gt; Assembly &gt; Subassembly
            </summary>
            <returns>
            The list of points that define each subassembly in the corridor
            </returns>
            <search> Subassembly, section</search>
        </member>
        <member name="M:CivilConnection.Corridor.GetCorridorSurfaces">
            <summary>
            Gets the corridor surfaces.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Corridor.GetShapesFromXML">
            <summary>
            Returns a collection of AppliedSubassemblyShapes in the Corridor.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Corridor.GetLinksFromXML">
            <summary>
            Returns a collection of AppliedSubassemblyLinks in the Corridor.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Corridor.PointByStationOffsetElevation(CivilConnection.Baseline,System.Double,System.Double,System.Double)">
            <summary>
            Returns a Point by station offset elevation.
            </summary>
            <param name="baseline">The baseline.</param>
            <param name="station">The station.</param>
            <param name="offset">The offset.</param>
            <param name="elevation">The elevation.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Corridor.CoordinateSystemByStation(CivilConnection.Baseline,System.Double)">
            <summary>
            Returns a CoordinateSystem by station.
            </summary>
            <param name="baseline">The baseline.</param>
            <param name="station">The station.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Corridor.CoordinateSystemByPoint(CivilConnection.Baseline,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Returns a CoordinateSystem by point.
            </summary>
            <param name="baseline">The baseline.</param>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Corridor.GetCodes">
            <summary>
            Gets the PointCodes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Corridor.GetFeaturelines">
            <summary>
            Gets the corridor Featurelies organized by Corridor-Baseline-Code-Region
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Corridor.GetSubassemblyPoints(System.Boolean)">
            <summary>
            Gets the subassembly points organized by: Corridor &gt; Baseline &gt; Region &gt; Assembly &gt; Subassembly.
            </summary>
            <param name="dumpXML">If true dumps a LandXML in the Temp folder.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Corridor.GetPointsByCode(System.String)">
            <summary>
             Gets the subassembly points organized by: Corridor &gt; Baseline &gt; Region &gt; Code.
             It requires to export a LandXML to the %Temp% folder, named like the Civil 3D Document, containing only the corridor data.
            </summary>
            <param name="code">The code.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Corridor.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:CivilConnection.Corridor.GetFeaturelineByPointCodeSide(Autodesk.DesignScript.Geometry.Point,System.Int32,System.String,System.String)">
            <summary>
            Gets the closest featureline by point code side.
            </summary>
            <param name="point">The point.</param>
            <param name="baselineIndex">Index of the baseline.</param>
            <param name="code">The code.</param>
            <param name="side">The side.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Corridor.GetFeaturelinesByCode(System.String)">
            <summary>
            Gets the featurelines by Code &gt; Baseline &gt; Region.
            </summary>
            <param name="code">The code.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Corridor.GetFeaturelinesByCodeStation(System.String,System.Double)">
            <summary>
            Gets the featurelines by Code &gt; Baseline &gt; Region.
            </summary>
            <param name="code">The code.</param>
            <param name="station">The station.</param>
            <returns></returns>
        </member>
        <member name="T:CivilConnection.Featureline">
            <summary>
            Featureline obejct type.
            </summary>
        </member>
        <member name="T:CivilConnection.Featureline.SideType">
            <summary>
            Side enumerator.
            </summary>
        </member>
        <member name="F:CivilConnection.Featureline.SideType.None">
            <excluded/>
        </member>
        <member name="F:CivilConnection.Featureline.SideType.Left">
            <excluded/>
        </member>
        <member name="F:CivilConnection.Featureline.SideType.Right">
            <excluded/>
        </member>
        <member name="F:CivilConnection.Featureline._baseline">
            <summary>
            The baseline
            </summary>
        </member>
        <member name="F:CivilConnection.Featureline._code">
            <summary>
            The code
            </summary>
        </member>
        <member name="F:CivilConnection.Featureline._polycurve">
            <summary>
            The polycurve
            </summary>
        </member>
        <member name="F:CivilConnection.Featureline._side">
            <summary>
            The side
            </summary>
        </member>
        <member name="F:CivilConnection.Featureline._regionIndex">
            <summary>
            The Baseline Region Index of the Featureline
            </summary>
        </member>
        <member name="F:CivilConnection.Featureline._start">
            <summary>
            The starting station
            </summary>
        </member>
        <member name="F:CivilConnection.Featureline._end">
            <summary>
            The ending station
            </summary>
        </member>
        <member name="F:CivilConnection.Featureline._points">
            <summary>
            The Feautreline points
            </summary>
        </member>
        <member name="P:CivilConnection.Featureline.Baseline">
            <summary>
            Gets the baseline.
            </summary>
            <value>
            The baseline.
            </value>
        </member>
        <member name="P:CivilConnection.Featureline.Code">
            <summary>
            Gets the code.
            </summary>
            <value>
            The code.
            </value>
        </member>
        <member name="P:CivilConnection.Featureline.Curve">
            <summary>
            Gets the PolyCurve.
            </summary>
            <value>
            The curve.
            </value>
        </member>
        <member name="P:CivilConnection.Featureline.Start">
            <summary>
            Gets the start station.
            </summary>
            <value>
            The start.
            </value>
        </member>
        <member name="P:CivilConnection.Featureline.End">
            <summary>
            Gets the end station.
            </summary>
            <value>
            The end.
            </value>
        </member>
        <member name="P:CivilConnection.Featureline.Side">
            <summary>
            Gets the side.
            </summary>
            <value>
            The side.
            </value>
        </member>
        <member name="P:CivilConnection.Featureline.BaselineRegionIndex">
            <summary>
            Gets the Baseline Region Index of the Featureline
            </summary>
        </member>
        <member name="P:CivilConnection.Featureline.Points">
            <summary>
            Gets the Featureline points.
            </summary>
        </member>
        <member name="M:CivilConnection.Featureline.#ctor(CivilConnection.Baseline,Autodesk.DesignScript.Geometry.PolyCurve,System.String,CivilConnection.Featureline.SideType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.Featureline"/> class.
            </summary>
            <param name="baseline">The baseline.</param>
            <param name="polycurve">The polycurve.</param>
            <param name="code">The code.</param>
            <param name="side">The side.</param>
            <param name="regionIndex">The region index</param>
        </member>
        <member name="M:CivilConnection.Featureline.ByBaselineLandFeatureline(CivilConnection.Baseline,CivilConnection.LandFeatureline,System.Int32,System.String)">
            <summary>
            Creates a Featureline from a corridor Baseline and a LandFeatureline.
            The LandFeatureline name must follow Corridor Name | Corridor Region | Corridor Feature Code | Feature Side | Next Counter | Style Name.
            </summary>
            <param name="baseline">The baseline.</param>
            <param name="landFeatureline">Teh land feature line.</param>
            <param name="regionIndex">The region Index</param>
            <param name="separator">The separator.</param>
            <returns></returns>
            
        </member>
        <member name="M:CivilConnection.Featureline.CoordinateSystemByStation(System.Double,System.Boolean)">
            <summary>
            CoordinateSystem by station.
            </summary>
            <param name="station">The station.</param>
            <param name="vertical">if set to <c>true</c> the ZAxis is [vertical].</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Featureline.PointAtStation(System.Double)">
            <summary>
            Point at station.
            </summary>
            <param name="station">The station.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Featureline.PointByStationOffsetElevation(System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Point the by station offset elevation.
            </summary>
            <param name="station">The station.</param>
            <param name="offset">The offset.</param>
            <param name="elevation">The elevation.</param>
            <param name="referToBaseline">if set to <c>true</c> [refer to baseline].</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Featureline.GetStationOffsetElevationByPoint(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Gets the station, offset and elevation for a point.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Featureline.GetPolyCurveByOffsetElevation(System.Double,System.Double)">
            <summary>
            Gets a PolyCurve obtained by applying the offset and elevation displacement to each point of the Featureline PolyCurve.
            </summary>
            <param name="offset">The offset.</param>
            <param name="elevation">The elevation.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Featureline.GetPolyCurveByStationsOffsetElevation(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Gets a PolyCurve obtained by applying the offset and elevation displacement to each point of the Featureline PolyCurve only for the station interval specified.
            </summary>
            <param name="startStation">The start station.</param>
            <param name="endStation">The end station.</param>
            <param name="offset">The offset.</param>
            <param name="elevation">The elevation.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Featureline.PointsByChord(Autodesk.DesignScript.Geometry.Curve,System.Double)">
            <summary>
            Points by chord distance on the Featureline.
            </summary>
            <param name="curve">The curve to subdivide.</param>
            <param name="chord">The chord.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Featureline.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:CivilConnection.LandFeatureline">
            <summary>
            LandFeatureline object type.
            </summary>
        </member>
        <member name="F:CivilConnection.LandFeatureline._name">
            <summary>
            The name
            </summary>
        </member>
        <member name="F:CivilConnection.LandFeatureline._polycurve">
            <summary>
            The polycurve
            </summary>
        </member>
        <member name="F:CivilConnection.LandFeatureline._featureline">
            <summary>
            The LandFeatureline
            </summary>
        </member>
        <member name="F:CivilConnection.LandFeatureline._minGrade">
            <summary>
            The minimum grade
            </summary>
        </member>
        <member name="F:CivilConnection.LandFeatureline._minElevation">
            <summary>
            The minimum elevation
            </summary>
        </member>
        <member name="F:CivilConnection.LandFeatureline._maxGrade">
            <summary>
            The maximum grade
            </summary>
        </member>
        <member name="F:CivilConnection.LandFeatureline._maxElevation">
            <summary>
            The maximum elevation
            </summary>
        </member>
        <member name="F:CivilConnection.LandFeatureline._coordinates">
            <summary>
            The coordinates
            </summary>
        </member>
        <member name="F:CivilConnection.LandFeatureline._style">
            <summary>
            The style
            </summary>
        </member>
        <member name="F:CivilConnection.LandFeatureline._points">
            <summary>
            The points of the LandFeatureline
            </summary>
        </member>
        <member name="P:CivilConnection.LandFeatureline.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:CivilConnection.LandFeatureline.Curve">
            <summary>
            Gets the curve.
            </summary>
            <value>
            The curve.
            </value>
        </member>
        <member name="P:CivilConnection.LandFeatureline.Style">
            <summary>
            Gets the style.
            </summary>
            <value>
            The style.
            </value>
        </member>
        <member name="P:CivilConnection.LandFeatureline.MinGrade">
            <summary>
            Gets the minimum grade.
            </summary>
            <value>
            The minimum grade.
            </value>
        </member>
        <member name="P:CivilConnection.LandFeatureline.MaxGrade">
            <summary>
            Gets the maximum grade.
            </summary>
            <value>
            The maximum grade.
            </value>
        </member>
        <member name="P:CivilConnection.LandFeatureline.MinElevation">
            <summary>
            Gets the minimum elevation.
            </summary>
            <value>
            The minimum elevation.
            </value>
        </member>
        <member name="P:CivilConnection.LandFeatureline.MaxElevation">
            <summary>
            Gets the maximum elevation.
            </summary>
            <value>
            The maximum elevation.
            </value>
        </member>
        <member name="P:CivilConnection.LandFeatureline.Points">
            <summary>
            Gets the LandFeatureline points.
            </summary>
        </member>
        <member name="M:CivilConnection.LandFeatureline.#ctor(Autodesk.AECC.Interop.Land.AeccLandFeatureLine,Autodesk.DesignScript.Geometry.PolyCurve,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.LandFeatureline"/> class.
            </summary>
            <param name="fl">The AeccLandFeatureline.</param>
            <param name="pc">The PolyCurve.</param>
            <param name="style">The style name.</param>
        </member>
        <member name="M:CivilConnection.LandFeatureline.#ctor(Autodesk.AECC.Interop.Land.AeccLandFeatureLine,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.LandFeatureline"/> class.
            </summary>
            <param name="fl">The AeccLandFeatureline.</param>
            <param name="style">The style name.</param>
        </member>
        <member name="M:CivilConnection.LandFeatureline.GetDocumentLandFeaturelines(CivilConnection.CivilDocument)">
            <summary>
            Gets all the LandFeaturelines from a CivilDocument.
            The Style will be empty by default.
            Not all the PolyCurves will be branching and it is to be expected to have null values.
            </summary>
            <param name="civilDocument">The CivilDocument</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.LandFeatureline.ByObjectPolyCurve(Autodesk.AECC.Interop.Land.AeccLandFeatureLine,Autodesk.DesignScript.Geometry.PolyCurve)">
            <summary>
            Creates LandFeatureline
            </summary>
            <param name="fl">The featureline COM object</param>
            <param name="polyCurve">The polycurve</param>
            <returns></returns>
            
        </member>
        <member name="M:CivilConnection.LandFeatureline.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:CivilConnection.Mass">
            <summary>
            Mass obejct type.
            </summary>
            <seealso cref="T:Revit.Elements.AbstractFamilyInstance" />
        </member>
        <member name="P:CivilConnection.Mass.InternalFamilyInstance">
            <summary>
            Reference to the Element
            </summary>
        </member>
        <member name="P:CivilConnection.Mass.InternalElement">
            <summary>
            Reference to the Element
            </summary>
        </member>
        <member name="M:CivilConnection.Mass.#ctor(Autodesk.Revit.DB.FamilyInstance)">
            <summary>
            Wrap an existing Mass.
            </summary>
            <param name="instance">The family instance.</param>
        </member>
        <member name="M:CivilConnection.Mass.#ctor(Autodesk.Revit.DB.FamilySymbol,Autodesk.Revit.DB.XYZ)">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.Mass"/> class.
            </summary>
            <param name="fs">The fs.</param>
            <param name="pos">The position.</param>
        </member>
        <member name="M:CivilConnection.Mass.InitMass(Autodesk.Revit.DB.FamilyInstance)">
            <summary>
            Initializes the mass.
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:CivilConnection.Mass.InitMass(Autodesk.Revit.DB.FamilySymbol,Autodesk.Revit.DB.XYZ)">
            <summary>
            Initializes the mass.
            </summary>
            <param name="fs">The fs.</param>
            <param name="pos">The position.</param>
        </member>
        <member name="M:CivilConnection.Mass.InternalSetFamilyInstance(Autodesk.Revit.DB.FamilyInstance)">
            <summary>
            Internals the set family instance.
            </summary>
            <param name="fi">The family instance.</param>
        </member>
        <member name="M:CivilConnection.Mass.InternalSetPosition(Autodesk.Revit.DB.XYZ)">
            <summary>
            Method to set position.
            </summary>
            <param name="fi">The fi.</param>
        </member>
        <member name="M:CivilConnection.Mass.CloseFamily(System.String)">
            <summary>
            Closes the family.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:CivilConnection.Mass.CreateModelCurves(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.CurveLoop)">
            <summary>
            Utility function that creates model curves in the document.
            </summary>
            <param name="doc">The Document</param>
            <param name="cl">The CurveLoop.</param>
        </member>
        <member name="M:CivilConnection.Mass.CreateModelCurve(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.Curve)">
            <summary>
            Utility function that creates model curves in the document.
            </summary>
            <param name="doc">The Document</param>
            <param name="c">The curve.</param>
        </member>
        <member name="M:CivilConnection.Mass.CloseDocument(Autodesk.Revit.ApplicationServices.Application,System.String)">
            <summary>
            Closes the open family document and returns the family name with extension
            </summary>
            <param name="app">A reference to the application.</param>
            <param name="famName">The title of the family document to close including extension.</param>
        </member>
        <member name="M:CivilConnection.Mass.GetFamilyDocument(Autodesk.Revit.ApplicationServices.Application,System.String,System.String,Autodesk.Revit.DB.Family@,Autodesk.Revit.DB.Document@,Autodesk.Revit.DB.FamilyInstance@)">
            <summary>
            Returns a reference to a Family document with the specified template and family name.
            </summary>
            <param name="app">A reference to the application.</param>
            <param name="famName">The title of the family document to close including extension.</param>
            <param name="familyTemplate">The mass template path.</param>
            <param name="family">The reference to the Family object in the model.</param>
            <param name="famDoc">The output family document.</param>
            <param name="rvtFI">A placeholder for the family instance in the Revit model.</param>
        </member>
        <member name="M:CivilConnection.Mass.CleanupFamilyDocument(Autodesk.Revit.DB.Document)">
            <summary>
            Removes all CurveElements and FreeFormElements in the family document.
            </summary>
            <param name="famDoc">The family document.</param>
        </member>
        <member name="M:CivilConnection.Mass.TryJoinSolids(Autodesk.Revit.DB.Document,System.Collections.Generic.IList{Autodesk.Revit.DB.Solid})">
            <summary>
            Trying to join the solids in the list.
            </summary>
            <param name="famDoc">The family document.</param>
            <param name="solids">The list of Solid to try to join.</param>
        </member>
        <member name="M:CivilConnection.Mass.SaveFamily(Autodesk.Revit.DB.Document,System.String)">
            <summary>
            Saves the family
            </summary>
            <param name="famDoc">The family document.</param>
            <param name="famPath">The path where to save the family.</param>
        </member>
        <member name="M:CivilConnection.Mass.UpdateFamilyInstance(System.String,Autodesk.Revit.DB.FamilyInstance,System.Boolean)">
            <summary>
            Updates the family and the family instance.
            </summary>
            <param name="famPath">The path to the family to reload.</param>
            <param name="rvtFI">The existing Revit Family Instance.</param>
            <param name="found">A boolean value that states if the family was existing or created anew.</param>
        </member>
        <member name="M:CivilConnection.Mass.ByCrossSections(Autodesk.DesignScript.Geometry.Curve[][],System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates a free form mass family by cross sections on the fly and inserts it in the project in Revit local coordinates.
            </summary>
            <param name="crossSections">The cross sections.</param>
            <param name="name">The name.</param>
            <param name="familyTemplate">The mass template path.</param>
            <param name="append">Append the geometry definition to the current geometry in the Family.</param>
            <param name="join">If true attempets to join the geometries.</param>
            <param name="rebar">Can host rebar.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Mass.BySolid(Autodesk.DesignScript.Geometry.Solid,System.String,System.String,Revit.Elements.Material,System.Boolean,System.Boolean)">
            <summary>
            Returns a FamilyInstance by a Dynamo solid in Revit local coordinates.
            </summary>
            <param name="solid">The Dynamo solid in Revit local coordinates.</param>
            <param name="name">The name of the family type.</param>
            <param name="familyTemplate">the path to the RFT file to use as a template.</param>
            <param name="material">The material to assign to the Revit family type.</param>
            <param name="isVoid">If true it will create a void that can be used to cut other Revit elements.</param>
            <param name="rebar">Can host rebar.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Mass.ByPathCrossSections(Autodesk.DesignScript.Geometry.Point[],Autodesk.DesignScript.Geometry.Curve[][],System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates a free form mass family by cross sections and path on the fly and inserts it in the project in Revit local coordinates.
            </summary>
            <param name="pathPoints"></param>
            <param name="crossSections"></param>
            <param name="name"></param>
            <param name="familyTemplate"></param>
            <param name="append"></param>
            <param name="createForm"></param>
            <param name="rebar">Can host Rebar.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Mass.ByLoftCrossSections(Autodesk.DesignScript.Geometry.Curve[][],System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a free form mass family by cross sections on the fly and inserts it in the project in Revit local coordinates.
            </summary>
            <param name="crossSections">The cross sections.</param>
            <param name="name">The name.</param>
            <param name="familyTemplate">The mass template path.</param>
            <param name="append">Append the geoemtry definition to the current geometry in the Family.</param>
            <param name="rebar">Can host rebar.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Mass.ByShapesCreaseStations(System.String,System.String,CivilConnection.AppliedSubassemblyShape[],System.Double[],System.Boolean,System.Boolean)">
            <summary>
            Creates a free form mass family by cross sections on the fly and inserts it in the project in Revit local coordinates.
            </summary>
            <param name="shapes">The AppliedSubassemblyShape that represents the cross sections.</param>
            <param name="stations">The sequence of stations that defines the creases along the alignment. If null, the loft will be continuous.</param>
            <param name="name">The name.</param>
            <param name="familyTemplate">The mass template path.</param>
            <param name="append">Append the geoemtry definition to the current geometry in the Family.</param>
            <param name="rebar">Can host rebar.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Mass.ByClosedCurvesCreaseStations(System.String,System.String,CivilConnection.Alignment,Autodesk.DesignScript.Geometry.PolyCurve[],System.Double[],System.Boolean,System.Boolean)">
            <summary>
            Creates a free form mass family by cross sections on the fly and inserts it in the project in Revit local coordinates.
            </summary>
            <param name="closedCurves">The closed curves that represents the cross sections.</param>
            <param name="stations">The sequence of stations that defines the creases along the alignment. If null, the loft will be continuous.</param>
            <param name="name">The name.</param>
            <param name="familyTemplate">The mass template path.</param>
            <param name="alignment">The alignment used to calculate the stations.</param>
            <param name="append">Append the geoemtry definition to the current geometry in the Family.</param>
            <param name="rebar">Can host rebar.</param>
            <returns></returns>
        </member>
        <member name="T:CivilConnection.MultiPoint">
            <summary>
            Shape Point Class
            </summary>
        </member>
        <member name="P:CivilConnection.MultiPoint.ShapePoints">
            <summary>
            Gets or sets the shape points.
            </summary>
            <value>
            The shape points.
            </value>
            
        </member>
        <member name="M:CivilConnection.MultiPoint.#ctor(CivilConnection.ShapePointArray)">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.MultiPoint"/> class.
            </summary>
            <param name="shapePointArray">A ShapePointArray object.</param>
        </member>
        <member name="M:CivilConnection.MultiPoint.ToHorizontalFloor(Revit.Elements.FloorType,Revit.Elements.Level)">
            <exclude />
        </member>
        <member name="M:CivilConnection.MultiPoint.ByShapePointArray(CivilConnection.ShapePointArray)">
            <summary>
            Returns a MultiPoint by a collection of shape points.
            </summary>
            <param name="shapePointArray">The shape points.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MultiPoint.ByElement(Revit.Elements.Element)">
            <summary>
            Returns a MultiPoint by a collection of shape points.
            </summary>
            <param name="element">The Revit element.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MultiPoint.ToFloor(Revit.Elements.FloorType,Revit.Elements.Level,System.Boolean)">
            <summary>
            Converts the MultiPoint into a floor of the specified type.
            </summary>
            <param name="floorType">Type of the floor.</param>
            <param name="level">The level.</param>
            <param name="structural">if set to <c>true</c> [structural].</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MultiPoint.ToAdaptiveComponent(Revit.Elements.FamilyType)">
            <summary>
            Converts the MultiPoint into an adaptive component of the specified type.
            </summary>
            <param name="familyType">Type of the family.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MultiPoint.SerializeXML">
            <summary>
            Serializes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MultiPoint.SerializeJSON">
            <summary>
            Serializes to json.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MultiPoint.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:CivilConnection.OpeningUtils">
            <summary>
            OpeningUtils.
            </summary>
        </member>
        <member name="M:CivilConnection.OpeningUtils.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.OpeningUtils"/> class.
            </summary>
        </member>
        <member name="M:CivilConnection.OpeningUtils.GetRectangularOpenings">
            <summary>
            Gets the rectangular openings.
            </summary>
            <returns></returns>
            <remarks>This method uses walls, doors, windows and generic models bounding boxes to determine the rectangles.
            These objects can be in the host file or in linked Revit files.</remarks>
        </member>
        <member name="T:CivilConnection.Profile">
            <summary>
            Profile obejct type.
            </summary>
        </member>
        <member name="F:CivilConnection.Profile._profile">
            <summary>
            The profile
            </summary>
        </member>
        <member name="F:CivilConnection.Profile._entities">
            <summary>
            The entities
            </summary>
        </member>
        <member name="P:CivilConnection.Profile.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:CivilConnection.Profile.InternalElement">
            <summary>
            Gets the internal element.
            </summary>
            <value>
            The internal element.
            </value>
        </member>
        <member name="P:CivilConnection.Profile.Length">
            <summary>
            Gets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="P:CivilConnection.Profile.MaxElevation">
            <summary>
            Gets the maximum elevation.
            </summary>
            <value>
            The maximum elevation.
            </value>
        </member>
        <member name="P:CivilConnection.Profile.MinElevation">
            <summary>
            Gets the minimum elevation.
            </summary>
            <value>
            The minimum elevation.
            </value>
        </member>
        <member name="P:CivilConnection.Profile.StartStation">
            <summary>
            Gets the start station.
            </summary>
            <value>
            The start station.
            </value>
        </member>
        <member name="P:CivilConnection.Profile.EndStation">
            <summary>
            Gets the end station.
            </summary>
            <value>
            The end station.
            </value>
        </member>
        <member name="P:CivilConnection.Profile.WeedGradeFactor">
            <summary>
            Gets the weed grade factor.
            </summary>
            <value>
            The weed grade factor.
            </value>
        </member>
        <member name="P:CivilConnection.Profile.PVIStations">
            <summary>
            Gets the stations of the PVIs.
            </summary>
            <value>
            The PVIStations.
            </value>
        </member>
        <member name="P:CivilConnection.Profile.PVIElevations">
            <summary>
            Gets the elevation of the PVIs.
            </summary>
            <value>
            The PVIElevations.
            </value>
        </member>
        <member name="P:CivilConnection.Profile.PVIGradeIns">
            <summary>
            Gets the grade in of the PVIs.
            </summary>
            <value>
            The PVIGradeIns.
            </value>
        </member>
        <member name="P:CivilConnection.Profile.PVIGradeOuts">
            <summary>
            Gets the grade out of the PVIs.
            </summary>
            <value>
            The PVIGradeOuts.
            </value>
        </member>
        <member name="M:CivilConnection.Profile.#ctor(Autodesk.AECC.Interop.Land.AeccProfile)">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.Profile"/> class.
            </summary>
            <param name="profile">The profile.</param>
        </member>
        <member name="M:CivilConnection.Profile.XX">
            <exclude />
        </member>
        <member name="M:CivilConnection.Profile.GetElevationAtStation(System.Double)">
            <summary>
            Gets the elevation at station.
            </summary>
            <param name="station">The station.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Profile.GetEntitiesElevations">
            <summary>
            Gets the elevations of the entities in the profile.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Profile.GetEntitiesStations">
            <summary>
            Gets the stations of the entities in the profile.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Profile.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:CivilConnection.ProfilePVI">
            <summary>
            ProfilePVI object type.
            </summary>
        </member>
        <member name="F:CivilConnection.ProfilePVI._pvi">
            <summary>
            The pvi
            </summary>
        </member>
        <member name="P:CivilConnection.ProfilePVI.Station">
            <summary>
            Gets the station.
            </summary>
            <value>
            The station.
            </value>
        </member>
        <member name="P:CivilConnection.ProfilePVI.InternalElement">
            <summary>
            Gets the internal element.
            </summary>
            <value>
            The internal element.
            </value>
        </member>
        <member name="P:CivilConnection.ProfilePVI.Elevation">
            <summary>
            Gets the elevation.
            </summary>
            <value>
            The elevation.
            </value>
        </member>
        <member name="P:CivilConnection.ProfilePVI.GradeIn">
            <summary>
            Gets the grade in.
            </summary>
            <value>
            The grade in.
            </value>
        </member>
        <member name="P:CivilConnection.ProfilePVI.GradeOut">
            <summary>
            Gets the grade out.
            </summary>
            <value>
            The grade out.
            </value>
        </member>
        <member name="M:CivilConnection.ProfilePVI.#ctor(Autodesk.AECC.Interop.Land.AeccProfilePVI)">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.ProfilePVI"/> class.
            </summary>
            <param name="pvi">The pvi.</param>
        </member>
        <member name="M:CivilConnection.ProfilePVI.ToString">
            <summary>
            Returns a text representation of the object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:CivilConnection.ProfileView">
            <summary>
            ProfileView object type.
            </summary>
        </member>
        <member name="F:CivilConnection.ProfileView._profileView">
            <summary>
            The profile view
            </summary>
        </member>
        <member name="P:CivilConnection.ProfileView.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:CivilConnection.ProfileView.InternalElement">
            <summary>
            Gets the internal element.
            </summary>
            <value>
            The internal element.
            </value>
        </member>
        <member name="M:CivilConnection.ProfileView.#ctor(Autodesk.AECC.Interop.Land.AeccProfileView)">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.ProfileView"/> class.
            </summary>
            <param name="profileView">The profile view.</param>
        </member>
        <member name="M:CivilConnection.ProfileView.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:CivilConnection.ProjectPositionUtils">
            <summary>
            Static Obejct that returns the ProjectPosition of the Revti Document
            </summary>
        </member>
        <member name="P:CivilConnection.ProjectPositionUtils.ProjectPosition">
            <summary>
            The ProjectPosition
            </summary>
        </member>
        <member name="P:CivilConnection.ProjectPositionUtils.Angle">
            <summary>
            The angle of the Project Position
            </summary>
        </member>
        <member name="P:CivilConnection.ProjectPositionUtils.ProjectLocation">
            <summary>
            The ProjectLocation
            </summary>
        </member>
        <member name="P:CivilConnection.ProjectPositionUtils.Instance">
            <summary>
            ProjectPositionUtils Instance
            </summary>
        </member>
        <member name="M:CivilConnection.ProjectPositionUtils.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CivilConnection.ProjectPositionUtils.ToString">
            <summary>
            String representation
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.ProjectPositionUtils.SetProjectPosition(Autodesk.Revit.DB.ProjectLocation,Autodesk.Revit.DB.ProjectPosition)">
            <summary>
            Set the new ProjectLocation of the Revit document origin.
            </summary>
            <param name="location">The ProjectLocation</param>
            <param name="newPosition">The new ProjectPosition of the document origin.</param>
        </member>
        <member name="T:CivilConnection.RevitFailuresPreprocessor">
            <summary>
            Revit Failure Preprocessor.
            </summary>
            <seealso cref="T:Autodesk.Revit.DB.IFailuresPreprocessor" />
        </member>
        <member name="M:CivilConnection.RevitFailuresPreprocessor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.RevitFailuresPreprocessor"/> class.
            </summary>
        </member>
        <member name="M:CivilConnection.RevitFailuresPreprocessor.PreprocessFailures(Autodesk.Revit.DB.FailuresAccessor)">
            <summary>
            Preprocesses the failures.
            </summary>
            <param name="fa">The failure accessor.</param>
            <returns></returns>
        </member>
        <member name="T:CivilConnection.RevitFamilyLoadOptions">
            <summary>
            FamilyLoadOptions
            </summary>
            <seealso cref="T:Autodesk.Revit.DB.IFamilyLoadOptions" />
        </member>
        <member name="F:CivilConnection.RevitFamilyLoadOptions.overwriteParameters">
            <summary>
            The overwrite parameters
            </summary>
        </member>
        <member name="F:CivilConnection.RevitFamilyLoadOptions.source">
            <summary>
            The source
            </summary>
        </member>
        <member name="M:CivilConnection.RevitFamilyLoadOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.RevitFamilyLoadOptions"/> class.
            </summary>
        </member>
        <member name="M:CivilConnection.RevitFamilyLoadOptions.OnFamilyFound(System.Boolean,System.Boolean@)">
            <summary>
            Called when [family found].
            </summary>
            <param name="familyInUse">if set to <c>true</c> [family in use].</param>
            <param name="overwriteParameters">if set to <c>true</c> [overwrite parameters].</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.RevitFamilyLoadOptions.OnSharedFamilyFound(Autodesk.Revit.DB.Family,System.Boolean,Autodesk.Revit.DB.FamilySource@,System.Boolean@)">
            <summary>
            Called when [shared family found].
            </summary>
            <param name="sharedFamily">The shared family.</param>
            <param name="familyInUse">if set to <c>true</c> [family in use].</param>
            <param name="source">The source.</param>
            <param name="overwriteParameters">if set to <c>true</c> [overwrite parameters].</param>
            <returns></returns>
        </member>
        <member name="T:CivilConnection.RevitUtils">
            <summary>
            Collection of utilities for the integration with Revit.
            </summary>
        </member>
        <member name="M:CivilConnection.RevitUtils.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.RevitUtils"/> class.
            </summary>
        </member>
        <member name="M:CivilConnection.RevitUtils.GetCropBoxFor(Autodesk.Revit.DB.View)">
            <summary>
            Return element id of crop box for a given view.
            The built-in parameter ID_PARAM of the crop box
            contains the element id of the view it is used in;
            e.g., the crop box 'points' to the view using it
            via ID_PARAM. Therefore, we can use a parameter
            filter to retrieve all crop boxes with the
            view's element id in that parameter.
            
            source:
            http://thebuildingcoder.typepad.com/blog/2018/02/efficiently-retrieve-crop-box-for-given-view.html
            </summary>
        </member>
        <member name="M:CivilConnection.RevitUtils.SetZAxisByVector(Revit.Elements.FamilyInstance,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Rotate the FamilyInstance around the insertion point to match the local Z-Axis with the provided vector.
            </summary>
            <param name="familyInstance">The FamilyInstance to rotate.</param>
            <param name="vector">The Vector used to align hte FmailyInstance local Z-Axis.</param>
            <returns></returns>
            
        </member>
        <member name="M:CivilConnection.RevitUtils.SectionViewByStation(CivilConnection.Baseline,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sections the view by station.
            </summary>
            <param name="baseline">The baseline.</param>
            <param name="station">The station.</param>
            <param name="lengthLeft">The length left.</param>
            <param name="lengthRight">The length right.</param>
            <param name="elevationMin">The elevation minimum.</param>
            <param name="elevationMax">The elevation maximum.</param>
            <param name="depth">The depth.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.RevitUtils.UpdateSectionViewByCoordinateSystem(Revit.Elements.Views.SectionView,Autodesk.DesignScript.Geometry.CoordinateSystem,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Updates the section view by Coordinate System, Min and Max points. The view depth is controlled by the the difference of the Z coordinates of min and max points.
            </summary>
            <param name="section">The section view.</param>
            <param name="cs">The coordinate system with vertical Z axis.</param>
            <param name="minPoint">The 2D point in the view coordinates that represents the bottom left corner in the view.</param>
            <param name="maxPoint">The 2D point in hte view coordinates that represents the top right corner in the view.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.RevitUtils.UpdatePlanViewByCoordinateSystem(Revit.Elements.Views.FloorPlanView,Autodesk.DesignScript.Geometry.CoordinateSystem,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Updates the section view by Coordinate System, Min and Max points. The view depth is controlled by the the difference of the Z coordinates of min and max points.
            </summary>
            <param name="plan">The plan view.</param>
            <param name="cs">The coordinate system with vertical Z axis.</param>
            <param name="minPoint">The 2D point in the view coordinates that represents the bottom left corner in the view.</param>
            <param name="maxPoint">The 2D point in tHe view coordinates that represents the top right corner in the view.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.RevitUtils.AlignmentSampleLinesParameters(Autodesk.AECC.Interop.Land.AeccAlignment)">
            <summary>
            Returns the sample lines parameters associated to an alignment
            </summary>
            <param name="alignment">The alignment</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.RevitUtils.GetSampleLinesSections(Autodesk.AECC.Interop.Land.AeccSampleLine)">
            <summary>
            Returns the sections lines associated to the sample line.
            </summary>
            <param name="line">The sample line.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.RevitUtils.AlignmentSectionsLines(CivilConnection.Alignment)">
            <summary>
            Returns the section lines associated to the sample lines in an alignment
            </summary>
            <param name="alignment">The alignment</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.RevitUtils.SampleLinesParameters(CivilConnection.Baseline)">
            <summary>
            Returns the Sample Lines parameters associated with the alignment.
            </summary>
            <param name="baseline">The baseline.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.RevitUtils.DetailGroupBySectionView(Revit.Elements.Views.SectionView)">
            <summary>
            Detail group by section view.
            </summary>
            <param name="section">The section.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.RevitUtils.DocumentTotalTransform">
            <summary>
            Gets the CoordinateSystem of the Revit document total transform.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.RevitUtils.DocumentTotalTransformInverse">
            <summary>
            Gets the Inverse CoordinateSystem of the Revit document total transform.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.RevitUtils.ExtractParamatersByCategory(CivilConnection.CivilDocument,Revit.Elements.Category)">
            <summary>
            Extracts the location paramaters by category.
            </summary>
            <param name="civilDocument">The civil document.</param>
            <param name="category">The category.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.RevitUtils.ObjectLocationParameters(System.Boolean,CivilConnection.CivilDocument,Revit.Elements.Element)">
            <summary>
            Returns the object location parameters.
            </summary>
            <param name="update">if set to <c>true</c> [update].</param>
            <param name="civilDocument">The civil document.</param>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.RevitUtils.ExportXML(System.Boolean)">
            <summary>
            Captures the Revit Elements with linear coordinate system parameters.
            </summary>
            <param name="run">if set to <c>true</c> [run].</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.RevitUtils.UpdateDocument(CivilConnection.CivilDocument,Revit.Elements.Element[])">
            <summary>
            Updates the location and the linear coordinate system parameters of all the Revit Elements captured in the project XML.
            </summary>
            <param name="civilDocument">The civil document.</param>
            <param name="elements">The elements.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.RevitUtils.UpdateObjects(CivilConnection.CivilDocument,System.Collections.Generic.IList{Revit.Elements.Element},System.Boolean)">
            <summary>
            Updates the location and the linear coordinate system parameters of a collection of Revit Elements.
            </summary>
            <param name="civilDocument">The civil document.</param>
            <param name="elements">A collection of elements.</param>
            <param name="normalized">If true it will keep the same proportion along the featureline rather than the exact station.</param>
            <remarks>At the end of the update the Station values may be different.</remarks>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.RevitUtils.AssignFeatureline(Revit.Elements.Element,CivilConnection.Featureline)">
            <summary>
            Uses a featureline to assign or recalculate the linear coordinate system parameters of a Revit Element.
            In case of Adaptive Components it calculates the parameters for the first adaptive point only.
            In case of Floors it calculates the parameters for the first point of the top face only.
            </summary>
            <param name="element">The element.</param>
            <param name="featureline">The featureline.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.RevitUtils.GetFeaturelineByElementCodeSide(Revit.Elements.Element,CivilConnection.Corridor,System.Int32,System.String,System.String)">
            <summary>
            Given a Revit Element it returns the first Featureline that meets the arguments.
            </summary>
            <param name="element">The element.</param>
            <param name="corridor">The corridor.</param>
            <param name="baselineIndex">Index of the baseline.</param>
            <param name="code">The code.</param>
            <param name="side">The side.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.RevitUtils.ProcessPointBasedFamilyInstancesByData(CivilConnection.CivilDocument,System.Object[][])">
            <summary>
            Processes the point based family instances by data.
            </summary>
            <param name="civilDocument">The civil document.</param>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.RevitUtils.FamilyInstanceLocationParametersForUpdate(CivilConnection.CivilDocument,System.Object[][])">
            <summary>
            Returns the FamilieInstance location parameters for update.
            </summary>
            <param name="civilDocument">The civil document.</param>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.RevitUtils.FamilyInstanceLocationParametersForCreate(CivilConnection.CivilDocument,System.Object[][])">
            <summary>
            Returns the FamilieInstance location parameters for creation.
            </summary>
            <param name="civilDocument">The civil document.</param>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.RevitUtils.CreateFamilyInstance(System.Boolean,Revit.Elements.FamilyType,CivilConnection.Featureline,System.Boolean,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates FamilyInstances using the featurelines to define linear coordinate systems and assign the parameters for the update.
            </summary>
            <param name="run">if set to <c>true</c> [run].</param>
            <param name="familyType">Type of the family.</param>
            <param name="featureline">The featureline.</param>
            <param name="useBaseline">if set to <c>true</c> [use baseline].</param>
            <param name="station">The station.</param>
            <param name="offset">The offset.</param>
            <param name="elevation">The elevation.</param>
            <param name="angleZ">The angle z.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.RevitUtils.RevitLinkByStationOffsetElevation(Revit.Elements.Element,CivilConnection.Featureline,System.Double,System.Double,System.Double,System.Boolean,System.Double)">
            <summary>
            Insert the Revit Link Instances of a give Revit Link Type in the host file.
            </summary>
            <param name="revitLinkType">Type of the revit link.</param>
            <param name="featureline">The featureline.</param>
            <param name="station">The station.</param>
            <param name="offset">The offset.</param>
            <param name="elevation">The elevation.</param>
            <param name="rotate">if set to <c>true</c> [rotate].</param>
            <param name="rotation">The rotation.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.RevitUtils.NamedSiteByStationOffsetElevation(CivilConnection.Featureline,System.Double,System.Double,System.Double,System.Boolean,System.Double)">
            <summary>
            Defines the Named site in the Revit Link.
            </summary>
            <param name="featureline">The featureline.</param>
            <param name="station">The station.</param>
            <param name="offset">The offset.</param>
            <param name="elevation">The elevation.</param>
            <param name="rotate">if set to <c>true</c> [rotate].</param>
            <param name="rotation">The rotation.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.RevitUtils.RevitLinkParameters">
            <summary>
            Exports the location parameters of Revit Link Instances.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.RevitUtils.ExportIFC(CivilConnection.CivilDocument,System.String)">
            <summary>
            Exports the IFC file of the DWG in the folder of the Revit document with in local coordinates.
            </summary>
            <param name="civilDocument">The civil document.</param>
            <param name="desktopConnectorFolder"> The Autodesk Desktop Connector folder for the project on the cloud environment (BIM 360, BIM 360 Team, Fusion 360).</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.RevitUtils.ReplaceIFCLink(System.String,System.Boolean)">
            <summary>
            Replaces the IFC Link with the intermediate RVT document
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.RevitUtils.WallBySurface(Autodesk.DesignScript.Geometry.Surface,Revit.Elements.WallType,System.Boolean)">
            <summary>
            Creates a wall from a Dynamo surface.
            The wall is recreated but not updated. The input surface must be planar and its normal must be orthogonal to the world Z Axis.
            </summary>
            <param name="surface">The surface.</param>
            <param name="wallType">Type of the wall.</param>
            <param name="structural">if set to <c>true</c> [structural].</param>
            <returns></returns>
        </member>
        <member name="T:CivilConnection.Tunnel.Ring">
            <summary>
            Tunnel Ring object type.
            </summary>
        </member>
        <member name="P:CivilConnection.Tunnel.Ring.Angle">
            <summary>
            Gets or sets the angle.
            </summary>
            <value>
            The angle.
            </value>
        </member>
        <member name="P:CivilConnection.Tunnel.Ring.Depth">
            <summary>
            Gets or sets the depth.
            </summary>
            <value>
            The depth.
            </value>
        </member>
        <member name="P:CivilConnection.Tunnel.Ring.InternalRadius">
            <summary>
            Gets or sets the internal radius.
            </summary>
            <value>
            The internal radius.
            </value>
        </member>
        <member name="P:CivilConnection.Tunnel.Ring.ExternalRadius">
            <summary>
            Gets or sets the external radius.
            </summary>
            <value>
            The external radius.
            </value>
        </member>
        <member name="P:CivilConnection.Tunnel.Ring.Rho">
            <summary>
            Gets the rho.
            </summary>
            <value>
            The rho.
            </value>
        </member>
        <member name="P:CivilConnection.Tunnel.Ring.Lambda">
            <summary>
            Gets the lambda.
            </summary>
            <value>
            The rho.
            </value>
        </member>
        <member name="P:CivilConnection.Tunnel.Ring.Offset">
            <summary>
            Gets or sets the offset.
            </summary>
            <value>
            The offset.
            </value>
        </member>
        <member name="P:CivilConnection.Tunnel.Ring.Thickness">
            <summary>
            Gets or sets the thickness.
            </summary>
            <value>
            The thickness.
            </value>
        </member>
        <member name="P:CivilConnection.Tunnel.Ring.FrontCS">
            <summary>
            Gets the front cs.
            </summary>
            <value>
            The front cs.
            </value>
        </member>
        <member name="P:CivilConnection.Tunnel.Ring.BackCS">
            <summary>
            Gets the back cs.
            </summary>
            <value>
            The back cs.
            </value>
        </member>
        <member name="P:CivilConnection.Tunnel.Ring.StartCS">
            <summary>
            Gets the start cs.
            </summary>
            <value>
            The start cs.
            </value>
        </member>
        <member name="P:CivilConnection.Tunnel.Ring.EndCS">
            <summary>
            Gets the end cs.
            </summary>
            <value>
            The end cs.
            </value>
        </member>
        <member name="P:CivilConnection.Tunnel.Ring.RingSolid">
            <summary>
            Gets the ring solid.
            </summary>
            <value>
            The ring solid.
            </value>
        </member>
        <member name="P:CivilConnection.Tunnel.Ring.Line">
            <summary>
            Gets the line.
            </summary>
            <value>
            The line.
            </value>
        </member>
        <member name="P:CivilConnection.Tunnel.Ring.FaceAngle">
            <summary>
            Gets the face angle.
            </summary>
            <value>
            The face angle.
            </value>
        </member>
        <member name="M:CivilConnection.Tunnel.Ring.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.Tunnel.Ring"/> class.
            </summary>
        </member>
        <member name="M:CivilConnection.Tunnel.Ring.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,Autodesk.DesignScript.Geometry.CoordinateSystem)">
            <summary>
            Initializes a new isntance of the <see cref="T:CivilConnection.Tunnel.Ring"/> class.
            </summary>
            <param name="radius">The internal radius.</param>
            <param name="thickness">The ring thickness.</param>
            <param name="offset">The ring offset in the narrow side.</param>
            <param name="depth">The ring depth.</param>
            <param name="angle">The ring rotation angle along the tunnel axis.</param>
            <param name="cs">The CoordinateSystem.</param>
        </member>
        <member name="M:CivilConnection.Tunnel.Ring.Copy">
            <summary>
            Creates a copy of the current Ring.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Tunnel.Ring.ByDimensions(System.Double,System.Double,System.Double,System.Double,System.Double,Autodesk.DesignScript.Geometry.CoordinateSystem)">
            <summary>
            Reutrns a Ring by dimensions.
            </summary>
            <param name="radius">The radius.</param>
            <param name="thickness">The thickness.</param>
            <param name="offset">The offset.</param>
            <param name="depth">The depth.</param>
            <param name="angle">The angle.</param>
            <param name="cs">The CoordinateSystem.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Tunnel.Ring.Transform(Autodesk.DesignScript.Geometry.CoordinateSystem)">
            <summary>
            Transforms a Ring by the specified cs.
            </summary>
            <param name="cs">The cs.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Tunnel.Ring.RotateOnFace(System.Double)">
            <summary>
            Rotates the Ring on the starting face by the angle value.
            </summary>
            <param name="angle">The angle.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Tunnel.Ring.Following(System.Double)">
            <summary>
            Returns the followings Ring with face rotated by the specified angle.
            </summary>
            <param name="angle">The angle.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Tunnel.Ring.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:CivilConnection.Tunnel.TbmTunnel">
            <summary>
            Tunnel Bored Machine Tunnel object type.
            </summary>
        </member>
        <member name="P:CivilConnection.Tunnel.TbmTunnel.Baseline">
            <summary>
            Gets the baseline curve.
            </summary>
            <value>
            The baseline.
            </value>
        </member>
        <member name="P:CivilConnection.Tunnel.TbmTunnel.Length">
            <summary>
            Gets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="P:CivilConnection.Tunnel.TbmTunnel.Rings">
            <summary>
            Gets the rings.
            </summary>
            <value>
            The rings.
            </value>
        </member>
        <member name="P:CivilConnection.Tunnel.TbmTunnel.RingSolids">
            <summary>
            Gets the ring solids.
            </summary>
            <value>
            The ring solids.
            </value>
        </member>
        <member name="P:CivilConnection.Tunnel.TbmTunnel.BaseRingSolid">
            <summary>
            Gets the solid of the base ring for the tunnel.
            </summary>
            <value>
            The ring solid.
            </value>
        </member>
        <member name="P:CivilConnection.Tunnel.TbmTunnel.Angles">
            <summary>
            Gets the angles.
            </summary>
            <value>
            The angles.
            </value>
        </member>
        <member name="P:CivilConnection.Tunnel.TbmTunnel.Points">
            <summary>
            Gets the points.
            </summary>
            <value>
            The points.
            </value>
        </member>
        <member name="M:CivilConnection.Tunnel.TbmTunnel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.Tunnel.TbmTunnel"/> class.
            </summary>
        </member>
        <member name="M:CivilConnection.Tunnel.TbmTunnel.ByBaselineRing(Autodesk.DesignScript.Geometry.Curve,CivilConnection.Tunnel.Ring)">
            <summary>
            Bies the baseline ring.
            </summary>
            <param name="baseline">The baseline.</param>
            <param name="ring">The ring.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Tunnel.TbmTunnel.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:CivilConnection.SessionVariables">
            <summary>
            Session Variables utilities.
            </summary>
        </member>
        <member name="P:CivilConnection.SessionVariables.LandXMLPath">
            <summary>
            Gets or sets the land XML path.
            </summary>
            <value>
            The land XML path.
            </value>
        </member>
        <member name="P:CivilConnection.SessionVariables.IsLandXMLExported">
            <summary>
            Gets or sets a value indicating whether this instance is land XML exported.
            </summary>
            <value>
              <c>true</c> if this instance is land XML exported; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CivilConnection.SessionVariables.CivilApplication">
            <summary>
            Returns the CivilApplication object
            </summary>
        </member>
        <member name="P:CivilConnection.SessionVariables.ParametersCreated">
            <summary>
            Returns true if the shared parameters have been created for this session.
            </summary>
        </member>
        <member name="P:CivilConnection.SessionVariables.DocumentTotalTransform">
            <summary>
            Returns a Dynamo CoordinateSystem that represents the Revit Document Total Transform for the session.
            </summary>
        </member>
        <member name="P:CivilConnection.SessionVariables.DocumentTotalTransformInverse">
            <summary>
            Returns a Dynamo CoordinateSystem that represents the Revit Document Total Transform Inverse for the session.
            </summary>
        </member>
        <member name="M:CivilConnection.SessionVariables.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.SessionVariables"/> class.
            </summary>
        </member>
        <member name="T:CivilConnection.ShapePoint">
            <summary>
            Shape Point Class
            </summary>
        </member>
        <member name="P:CivilConnection.ShapePoint.UniqueId">
            <summary>
            Gets the unique identifier.
            </summary>
            <value>
            The unique identifier.
            </value>
        </member>
        <member name="P:CivilConnection.ShapePoint.Id">
            <summary>
            Gets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
            
        </member>
        <member name="P:CivilConnection.ShapePoint.Corridor">
            <summary>
            Gets the corridor.
            </summary>
            <value>
            The corridor.
            </value>
            
        </member>
        <member name="P:CivilConnection.ShapePoint.BaselineIndex">
            <summary>
            Gets the index of the baseline.
            </summary>
            <value>
            The index of the baseline.
            </value>
            
        </member>
        <member name="P:CivilConnection.ShapePoint.Side">
            <summary>
            Gets the side.
            </summary>
            <value>
            The side.
            </value>
            
        </member>
        <member name="P:CivilConnection.ShapePoint.Code">
            <summary>
            Gets the code.
            </summary>
            <value>
            The code.
            </value>
            
        </member>
        <member name="P:CivilConnection.ShapePoint.Station">
            <summary>
            Gets the station.
            </summary>
            <value>
            The station.
            </value>
            
        </member>
        <member name="P:CivilConnection.ShapePoint.Offset">
            <summary>
            Gets the offset.
            </summary>
            <value>
            The offset.
            </value>
            
        </member>
        <member name="P:CivilConnection.ShapePoint.Elevation">
            <summary>
            Gets the elevation.
            </summary>
            <value>
            The elevation.
            </value>
        </member>
        <member name="P:CivilConnection.ShapePoint.Point">
            <summary>
            Gets the point.
            </summary>
            <value>
            The point.
            </value>
        </member>
        <member name="P:CivilConnection.ShapePoint.Featureline">
            <summary>
            Gets the featureline.
            </summary>
            <value>
            The featureline.
            </value>
        </member>
        <member name="P:CivilConnection.ShapePoint.RevitPoint">
            <summary>
            Gets the point in Revit local coordinate system.
            </summary>
            <value>
            The revit point.
            </value>
        </member>
        <member name="P:CivilConnection.ShapePoint.RegionIndex">
            <summary>
            Gets the Featureline region index
            </summary>
        </member>
        <member name="P:CivilConnection.ShapePoint.RegionRelative">
            <summary>
            Gets the Featureline region index
            </summary>
        </member>
        <member name="P:CivilConnection.ShapePoint.RegionNormalized">
            <summary>
            Gets the Featureline region index
            </summary>
        </member>
        <member name="M:CivilConnection.ShapePoint.#ctor(Autodesk.DesignScript.Geometry.Point,CivilConnection.Featureline,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.ShapePoint"/> class.
            </summary>
            <param name="point">The point.</param>
            <param name="featureline">The featureline.</param>
            <param name="id">The initial ID of the ShapePoint.</param>
        </member>
        <member name="M:CivilConnection.ShapePoint.ByPointFeatureline(Autodesk.DesignScript.Geometry.Point,CivilConnection.Featureline)">
            <summary>
            Bies the point featureline.
            </summary>
            <param name="point">The point.</param>
            <param name="featureline">The featureline.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.ShapePoint.Copy(System.Int32)">
            <summary>
            Copies this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.ShapePoint.SetId(System.Int32)">
            <summary>
            Sets the identifier.
            </summary>
            <param name="newId">The new identifier.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.ShapePoint.SetPoint(Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Sets the point.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.ShapePoint.UpdateByFeatureline(CivilConnection.Featureline)">
            <summary>
            Calculates the new ShapePoint location on the new Featureline using the Station, Offset and Elevation parameters.
            </summary>
            <param name="featureline">The featureline used to update the ShapePoint</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.ShapePoint.AssignFeatureline(CivilConnection.Featureline)">
            <summary>
            Updates the ShapePoint parameters Station, Offset and Elevation against the new Featureline.
            </summary>
            <param name="featureline">The featureline assigned to the ShapePoint</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.ShapePoint.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:CivilConnection.ShapePointArray">
            <summary>
            Collection of ShapePoints
            </summary>
        </member>
        <member name="P:CivilConnection.ShapePointArray.Points">
            <summary>
            Gets the points.
            </summary>
            <value>
            The points.
            </value>
            
        </member>
        <member name="P:CivilConnection.ShapePointArray.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="M:CivilConnection.ShapePointArray.#ctor">
            <exclude />
        </member>
        <member name="M:CivilConnection.ShapePointArray.Copy">
            <exclude />
        </member>
        <member name="M:CivilConnection.ShapePointArray.#ctor(System.Collections.Generic.IList{CivilConnection.ShapePoint})">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.ShapePointArray"/> class.
            </summary>
            <param name="shapePoints">The shape points.</param>
        </member>
        <member name="M:CivilConnection.ShapePointArray.ByShapePointList(System.Collections.Generic.IList{CivilConnection.ShapePoint})">
            <summary>
            Returns a ShapePointArray object
            </summary>
            <param name="shapePointList">The list of ShapePoints.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.ShapePointArray.Add(CivilConnection.ShapePoint)">
            <summary>
            Adds the specified shape point.
            </summary>
            <param name="shapePoint">The shape point.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.ShapePointArray.Renumber">
            <summary>
            Renumbers the ShapePoints in the instance.
            </summary>
        </member>
        <member name="M:CivilConnection.ShapePointArray.RemoveAtIndex(System.Int32)">
            <summary>
            Removes the ShapePoint at index.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.ShapePointArray.SortByStation(System.Int32)">
            <summary>
            Sorts the by station.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.ShapePointArray.SplitByFeatureline">
            <summary>
            Splits ShpaePoints into subset of ShapePoints by featureline.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.ShapePointArray.Reverse">
            <summary>
            Reverses this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.ShapePointArray.Join(CivilConnection.ShapePointArray)">
            <summary>
            Joins two ShapePoints objects into a new one.
            </summary>
            <param name="other">The other ShapePointArray.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.ShapePointArray.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:CivilConnection.SlopedFloor">
            <summary>
            AbstratMEPCurve object Type. Base class for Revti MEP Curve objects.
            </summary>
            <seealso cref="T:Revit.Elements.Element" />
        </member>
        <member name="P:CivilConnection.SlopedFloor.InternalFloor">
            <summary>
            An internal handle on the Revit floor
            </summary>
        </member>
        <member name="P:CivilConnection.SlopedFloor.InternalElement">
            <summary>
            Reference to the Element
            </summary>
        </member>
        <member name="P:CivilConnection.SlopedFloor.Floortype">
            <summary>
            Gets and sets the FloorType
            </summary>
        </member>
        <member name="P:CivilConnection.SlopedFloor.Level">
            <summary>
            Gets and sets the Level
            </summary>
        </member>
        <member name="P:CivilConnection.SlopedFloor.Structural">
            <summary>
            Gets and sets if the floor is structural
            </summary>
        </member>
        <member name="M:CivilConnection.SlopedFloor.#ctor(Autodesk.Revit.DB.Floor)">
            <summary>
            Private constructor
            </summary>
        </member>
        <member name="M:CivilConnection.SlopedFloor.#ctor(Autodesk.Revit.DB.CurveArray,Autodesk.Revit.DB.Line,System.Double,Autodesk.Revit.DB.FloorType,Autodesk.Revit.DB.Level,System.Boolean)">
            <summary>
            Private constructor
            </summary>
        </member>
        <member name="M:CivilConnection.SlopedFloor.InternalSetFloor(Autodesk.Revit.DB.Floor)">
            <summary>
            Set the InternalFloor property and the associated element id and unique id
            </summary>
            <param name="floor"></param>
        </member>
        <member name="M:CivilConnection.SlopedFloor.InitFloor(Autodesk.Revit.DB.Floor)">
            <summary>
            Initialize a floor element
            </summary>
        </member>
        <member name="M:CivilConnection.SlopedFloor.InitFloor(Autodesk.Revit.DB.CurveArray,Autodesk.Revit.DB.FloorType,Autodesk.Revit.DB.Level,Autodesk.Revit.DB.Line,System.Double,System.Boolean)">
            <summary>
            Initialize a floor element
            </summary>
        </member>
        <member name="M:CivilConnection.SlopedFloor.ByOutlineTypeAndLevel(Autodesk.DesignScript.Geometry.PolyCurve,Revit.Elements.FloorType,Revit.Elements.Level,System.Boolean)">
            <summary>
            Create a Revit Floor given it's curve outline and Level
            </summary>
            <param name="outline">The outline.</param>
            <param name="floorType">Type of the floor.</param>
            <param name="level">The level.</param>
            <param name="structural">if set to <c>true</c> [structural].</param>
            <returns>
            The floor
            </returns>
        </member>
        <member name="T:CivilConnection.Subassembly">
            <summary>
            Subassembly object type.
            </summary>
        </member>
        <member name="F:CivilConnection.Subassembly._subassembly">
            <summary>
            The subassembly
            </summary>
        </member>
        <member name="F:CivilConnection.Subassembly._corridor">
            <summary>
            The corridor
            </summary>
        </member>
        <member name="F:CivilConnection.Subassembly._parameters">
            <summary>
            The parameters
            </summary>
        </member>
        <member name="P:CivilConnection.Subassembly.InternalElement">
            <summary>
            Gets the internal element.
            </summary>
            <value>
            The internal element.
            </value>
        </member>
        <member name="P:CivilConnection.Subassembly.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:CivilConnection.Subassembly.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>
            The parameters.
            </value>
        </member>
        <member name="M:CivilConnection.Subassembly.#ctor(Autodesk.AECC.Interop.Roadway.AeccSubassembly,Autodesk.AECC.Interop.Roadway.AeccCorridor)">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.Subassembly"/> class.
            </summary>
            <param name="subassembly">The subassembly.</param>
            <param name="corridor">The corridor.</param>
        </member>
        <member name="M:CivilConnection.Subassembly.SetParameterByName(System.String,System.Object,System.Boolean)">
            <summary>
            Sets SubassemblyParameter value by name.
            </summary>
            <param name="name">The parameter name.</param>
            <param name="value">The value.</param>
            <param name="rebuild">if set to <c>true</c> [rebuild].</param>
            <returns></returns>
            <exception cref="T:System.Exception">
            The parameter name cannot be null
            or
            The value cannot be null
            or
            or
            </exception>
        </member>
        <member name="M:CivilConnection.Subassembly.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:CivilConnection.SubassemblyParameter">
            <summary>
            SubassemblyParameter obejct type.
            </summary>
        </member>
        <member name="F:CivilConnection.SubassemblyParameter._parameter">
            <summary>
            The parameter
            </summary>
        </member>
        <member name="F:CivilConnection.SubassemblyParameter._value">
            <summary>
            The value
            </summary>
        </member>
        <member name="F:CivilConnection.SubassemblyParameter._type">
            <summary>
            The type
            </summary>
        </member>
        <member name="P:CivilConnection.SubassemblyParameter.InternalElement">
            <summary>
            Gets the internal element.
            </summary>
            <value>
            The internal element.
            </value>
        </member>
        <member name="P:CivilConnection.SubassemblyParameter.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:CivilConnection.SubassemblyParameter.Comment">
            <summary>
            Gets the Comment.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:CivilConnection.SubassemblyParameter.Description">
            <summary>
            Gets the Description.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:CivilConnection.SubassemblyParameter.Value">
            <summary>
            Gets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:CivilConnection.SubassemblyParameter.Type">
            <summary>
            Gets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:CivilConnection.SubassemblyParameter.#ctor(Autodesk.AECC.Interop.Land.IAeccParam)">
            <summary>
            Initializes a new instance of the <see cref="T:CivilConnection.SubassemblyParameter"/> class.
            </summary>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:CivilConnection.SubassemblyParameter.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:CivilConnection.SubassemblyParameterType">
            <summary>
            SubassemblyParameterType enumerator.
            </summary>
        </member>
        <member name="F:CivilConnection.SubassemblyParameterType.Bool">
            <summary>
            Boolean Type
            </summary>
        </member>
        <member name="F:CivilConnection.SubassemblyParameterType.Double">
            <summary>
            Double Type
            </summary>
        </member>
        <member name="F:CivilConnection.SubassemblyParameterType.Long">
            <summary>
            Long Type
            </summary>
        </member>
        <member name="F:CivilConnection.SubassemblyParameterType.String">
            <summary>
            Stirng Type
            </summary>
        </member>
        <member name="T:CivilConnection.Utils">
            <summary>
            Collection of utilities.
            </summary>
        </member>
        <member name="M:CivilConnection.Utils.AlmostEqual(System.Double,System.Double)">
            <summary>
            Checks if two values are almost equal
            </summary>
            <param name="a">The first value.</param>
            <param name="b">The second value.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.FeetToMm(System.Double)">
            <summary>
            Feets to mm.
            </summary>
            <param name="d">The d.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.MmToFeet(System.Double)">
            <summary>
            Mms to feet.
            </summary>
            <param name="d">The d.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.FeetToM(System.Double)">
            <summary>
            Feets to m.
            </summary>
            <param name="d">The d.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.MToFeet(System.Double)">
            <summary>
            ms to feet.
            </summary>
            <param name="d">The d.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.DegToRad(System.Double)">
            <summary>
            Degs to RAD.
            </summary>
            <param name="angle">The angle.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.RadToDeg(System.Double)">
            <summary>
            RADs to deg.
            </summary>
            <param name="d">The d.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.AddLayer(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument,System.String)">
            <summary>
            Adds the layer.
            </summary>
            <param name="doc">The document.</param>
            <param name="layerName">Name of the layer.</param>
        </member>
        <member name="M:CivilConnection.Utils.FreezeLayers(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument,System.String)">
            <summary>
            Freezes the layers.
            </summary>
            <param name="doc">The document.</param>
            <param name="layer">the name of the layer.</param>
        </member>
        <member name="M:CivilConnection.Utils.AddText(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument,System.String,Autodesk.DesignScript.Geometry.Point,System.Double,System.String,Autodesk.DesignScript.Geometry.CoordinateSystem)">
            <summary>
            Adds the text.
            </summary>
            <param name="doc">The document.</param>
            <param name="text">The text.</param>
            <param name="point">The point.</param>
            <param name="height">The height.</param>
            <param name="layer">The layer.</param>
            <param name="cs">The cs.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.AddArcByArc(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument,Autodesk.DesignScript.Geometry.Arc,System.String)">
            <summary>
            Adds the arc by arc.
            </summary>
            <param name="doc">The document.</param>
            <param name="arc">The arc.</param>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.AddPointByPoint(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument,Autodesk.DesignScript.Geometry.Point,System.String)">
            <summary>
            Adds the point to the document.
            </summary>
            <param name="doc">The document.</param>
            <param name="point">The point.</param>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.AddCivilPointByPoint(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument,Autodesk.DesignScript.Geometry.Point)">
            <summary>
            Adds the land point by point.
            </summary>
            <param name="doc">The document.</param>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.AddPointGroupByPoint(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument,Autodesk.DesignScript.Geometry.Point[],System.String)">
            <summary>
            Adds the point group by point.
            </summary>
            <param name="doc">The document.</param>
            <param name="points">The points.</param>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.GetPointGroups(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument)">
            <summary>
            Returns the point groups in Civil 3D as Dynamo point lists.
            </summary>
            <param name="doc">The document.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.AddTINSurfaceByPoints(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument,Autodesk.DesignScript.Geometry.Point[],System.String,System.String)">
            <summary>
            Adds a TIN surface by points.
            </summary>
            <param name="doc">The document.</param>
            <param name="points">The points.</param>
            <param name="name">The name.</param>
            <param name="layer">The name of the layer.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.AddPolylineByPoints(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument,System.Collections.Generic.IList{Autodesk.DesignScript.Geometry.Point},System.String)">
            <summary>
            Adds a polyline by points.
            </summary>
            <param name="doc">The document.</param>
            <param name="points">The points.</param>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.AddCircleByCircle(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument,Autodesk.DesignScript.Geometry.Circle,System.String)">
            <summary>
            Adds a circle entity in Civil 3D by circle.
            </summary>
            <param name="doc">The document.</param>
            <param name="c">The c.</param>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.AddLWPolylineByPoints(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument,System.Collections.Generic.IList{Autodesk.DesignScript.Geometry.Point},System.String)">
            <summary>
            Adds a light weigth polyline by points.
            </summary>
            <param name="doc">The document.</param>
            <param name="points">The points.</param>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.AddLWPolylineByPolyCurve(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument,Autodesk.DesignScript.Geometry.PolyCurve,System.String)">
            <summary>
            Adds a light weight polyline by poly curve.
            </summary>
            <param name="doc">The document.</param>
            <param name="polycurve">The polycurve.</param>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.Rotate3DByCurveNormal(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument,System.String,Autodesk.DesignScript.Geometry.Curve)">
            <summary>
            Rotates in 3D by curve normal.
            </summary>
            <param name="doc">The document.</param>
            <param name="handle">The handle.</param>
            <param name="dynCurve">The dyn curve.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.RotateByVector(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument,System.String,Autodesk.DesignScript.Geometry.Vector)">
            <summary>
            Rotates the by vector.
            </summary>
            <param name="doc">The document.</param>
            <param name="handle">The handle.</param>
            <param name="vector">The vector.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.Rotate3DByPlane(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument,System.String,Autodesk.DesignScript.Geometry.Plane)">
            <summary>
            Rotate3s the d by plane.
            </summary>
            <param name="doc">The document.</param>
            <param name="handle">The handle.</param>
            <param name="plane">The plane.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.AddPolylineByCurve(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument,Autodesk.DesignScript.Geometry.Curve,System.String)">
            <summary>
            Adds the polyline by curve.
            </summary>
            <param name="doc">The document.</param>
            <param name="curve">The curve.</param>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.AddPolylineByCurves(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument,System.Collections.Generic.IList{Autodesk.DesignScript.Geometry.Curve},System.String)">
            <summary>
            Adds the polyline by curves.
            </summary>
            <param name="doc">The document.</param>
            <param name="curves">The curves.</param>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.AddExtrudedSolidByPoints(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument,System.Collections.Generic.IList{Autodesk.DesignScript.Geometry.Point},System.Double,System.String)">
            <summary>
            Adds the extruded solid by points.
            </summary>
            <param name="doc">The document.</param>
            <param name="points">The points.</param>
            <param name="height">The height.</param>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.AddRegionByPatch(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument,Autodesk.DesignScript.Geometry.Curve,System.String)">
            <summary>
            Adds the region by patch.
            </summary>
            <param name="doc">The document.</param>
            <param name="curve">The curve.</param>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.AddExtrudedSolidByPatch(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument,Autodesk.DesignScript.Geometry.Curve,System.Double,System.String)">
            <summary>
            Adds the extruded solid by patch.
            </summary>
            <param name="doc">The document.</param>
            <param name="curve">The curve.</param>
            <param name="height">The height.</param>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.AddExtrudedSolidByCurves(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument,System.Collections.Generic.IList{Autodesk.DesignScript.Geometry.Curve},System.Double,System.String)">
            <summary>
            Adds the extruded solid by curves.
            </summary>
            <param name="doc">The document.</param>
            <param name="curves">The curves.</param>
            <param name="height">The height.</param>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.CutSolidsByPatch(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument,Autodesk.DesignScript.Geometry.Curve,System.Double,System.String)">
            <summary>
            Cuts the solids by patch.
            </summary>
            <param name="doc">The document.</param>
            <param name="closedCurve">The closed curve.</param>
            <param name="height">The height.</param>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.CutSolidsByCurves(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument,System.Collections.Generic.IList{Autodesk.DesignScript.Geometry.Curve},System.Double,System.String)">
            <summary>
            Cuts the solids by curves.
            </summary>
            <param name="doc">The document.</param>
            <param name="closedCurves">The closed curves.</param>
            <param name="height">The height.</param>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.CutSolidsByGeometry(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument,Autodesk.DesignScript.Geometry.Geometry[],System.String)">
            <summary>
            Cuts the solids by geometry.
            </summary>
            <param name="doc">The document.</param>
            <param name="geometry">The geometry.</param>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.SliceSolidsByPlane(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument,Autodesk.DesignScript.Geometry.Plane)">
            <summary>
            Slices the solids by plane.
            </summary>
            <param name="doc">The document.</param>
            <param name="plane">The plane..</param>     
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.ImportGeometry(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument,Autodesk.DesignScript.Geometry.Geometry[],System.String)">
            <summary>
            Imports the geometry.
            </summary>
            <param name="doc">The document.</param>
            <param name="geometry">The geometry.</param>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.ImportGeometryByPath(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument,System.String,System.String)">
            <summary>
            Imports the geometry of a SAT file
            </summary>
            <param name="doc"></param>
            <param name="path"></param>
            <param name="layer"></param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.ImportElement(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument,Revit.Elements.Element,System.String,System.String)">
            <summary>
            Imports the element.
            </summary>
            <param name="doc">The document.</param>
            <param name="element">The element.</param>
            <param name="parameter">The parameter.</param>
            <param name="layer">The layer.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.DumpLandXML(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument)">
            <summary>
            Dumps the land XML.
            </summary>
            <param name="doc">The document.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.GetXmlDocument(Autodesk.AECC.Interop.UiRoadway.AeccRoadwayDocument)">
            <summary>
            Gets the XML document.
            </summary>
            <param name="doc">The document.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Error in Loading XML</exception>
        </member>
        <member name="M:CivilConnection.Utils.GetXmlNamespaceManager(System.Xml.XmlDocument)">
            <summary>
            Gets the XML namespace manager.
            </summary>
            <param name="xmlDoc">The XML document.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.Log(System.String)">
            <summary>
            Function that writes an entry to the log file
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:CivilConnection.Utils.InitializeLog">
            <summary>
            Finalizes the Log file.
            </summary>
        </member>
        <member name="M:CivilConnection.Utils.GetCorridorSubAssembliesFromLandXML(CivilConnection.Corridor,System.Boolean)">
            <summary>
            Gets the corridor subassemblies shapes from LandXML.
            </summary>
            <param name="corridor">The corridor.</param>
            <param name="dumpXML">If True exports a LandXML in the Temp folder.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.GetCorridorPointsByCodeFromLandXML(CivilConnection.Corridor,System.String)">
            <summary>
            Gets the corridor points by code from land XML.
            </summary>
            <param name="corridor">The corridor.</param>
            <param name="code">The code.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.GetFeatureLinesByCodeFromLandXML(CivilConnection.Corridor,System.String)">
            <summary>
            Gets the feature lines by code from land XML.
            </summary>
            <param name="corridor">The corridor.</param>
            <param name="code">The code.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.GetFeaturelinesFromLandXML(CivilConnection.Corridor)">
            <summary>
            Gets the featurelines from land XML.
            </summary>
            <param name="corridor">The corridor.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.GetFeaturelines(CivilConnection.Corridor)">
            <summary>
            Gets the featurelies from the corridor organized by Corridor-Baseline-Code-Region
            </summary>
            <param name="corridor">The corridor.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.GetSurfaceTriangles(CivilConnection.CivilSurface)">
            <summary>
            Gets the triangles from a CivilSurface
            </summary>
            <param name="surface">The CivilSurface.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.GetSurfaceTrianglesByLandXML(CivilConnection.CivilSurface,System.String,System.Boolean)">
            <summary>
            Gets the triangles from a CivilSurface
            </summary>
            <param name="surface">The CivilSurface.</param>
            <param name="path">The path to the LandXML that contains the surface export.</param>
            <param name="onlyVisible">If true processes the visible triangles in the XML.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.GetFacesLandXML(CivilConnection.CivilSurface,System.String,System.Boolean)">
            <summary>
            Gets the triangles from a CivilSurface
            </summary>
            <param name="surface">The CivilSurface.</param>
            <param name="path">The path to the LandXML that contains the surface export.</param>
            <param name="onlyVisible">If true processes the visible triangles in the XML.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.Utils.JoinSurfaces(System.Collections.Generic.IList{Autodesk.DesignScript.Geometry.Surface},System.Int32)">
            <summary>
            Recursive function to join surfaces into a PolySurface
            </summary>
            <param name="surfaces">The surface list to process</param>
            <param name="limit">The amount of surfaces to join together</param>
            <returns></returns>
        </member>
        <member name="T:CivilConnection.UtilsObjectsLocation">
            <summary>
            Collection of utilities for obejct location.
            </summary>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.FeetToMm(System.Double)">
            <summary>
            Feets to mm.
            </summary>
            <param name="d">The d.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.FeetToM(System.Double)">
            <summary>
            Feets to m.
            </summary>
            <param name="d">The d.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.MToFeet(System.Double)">
            <summary>
            ms to feet.
            </summary>
            <param name="d">The d.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.MmToFeet(System.Double)">
            <summary>
            Mms to feet.
            </summary>
            <param name="d">The d.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.DegToRadians(System.Double)">
            <summary>
            Degs to radians.
            </summary>
            <param name="d">The d.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.RadiansToDeg(System.Double)">
            <summary>
            Radianses to deg.
            </summary>
            <param name="d">The d.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.XYZMToFeet(Autodesk.Revit.DB.XYZ)">
            <summary>
            Xyzms to feet.
            </summary>
            <param name="xyz">The xyz.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.XYZFeetToM(Autodesk.Revit.DB.XYZ)">
            <summary>
            Xyzs the feet to m.
            </summary>
            <param name="xyz">The xyz.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.LocationXML">
            <summary>
            Locations the XML.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.UdpateDocumentFromXML(CivilConnection.CivilDocument,Revit.Elements.Element[])">
            <summary>
            Udpates the document from XML.
            </summary>
            <param name="civilDocument">The civil document.</param>
            <param name="elements">The elements.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.OptimizedUdpateObjectFromXML(CivilConnection.CivilDocument,System.Collections.Generic.IList{Revit.Elements.Element},System.Boolean)">
            <summary>
            Udpates the object from XML.
            </summary>
            <param name="civilDocument">The civil document.</param>
            <param name="elements">The element.</param>
            <param name="normalized">Boolean value to proces based on the normalized values.</param>
            <returns></returns>
            <remarks>If the code is "None" the Baseline will be used to calculate the location.</remarks>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.UpdateShapePoint(CivilConnection.CivilDocument,CivilConnection.ShapePoint)">
            <summary>
            Updates hte location of a ShapePoint object
            </summary>
            <param name="civilDocument">The CivilDocument in Civil 3D</param>
            <param name="sp">The ShapePoint</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.GroupElements(System.Collections.Generic.IList{Revit.Elements.Element})">
            <summary>
            Not in use
            </summary>
            <param name="elements"></param>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.TestUdpateObject(CivilConnection.CivilDocument,Revit.Elements.Element)">
            <summary>
            Tests the udpate object.
            </summary>
            <param name="civilDocument">The civil document.</param>
            <param name="element">The element.</param>
            <returns></returns>
            <exception cref="T:System.Exception">
            It was not possible to find the specified corridor
            or
            It was not possible to find the specified featureline
            or
            It was not possible to find corridor
            or
            It was not possible to find featureline
            </exception>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.GetConnectorManager(Autodesk.Revit.DB.Element)">
            <summary>
            Return the given element's connector manager,
            using either the family instance MEPModel or
            directly from the MEPCurve connector manager
            for ducts and pipes.
            </summary>
            <param name="e">The e.</param>
            <returns></returns>
            <exception cref="T:ArgumentException">Element is neither an MEP curve nor a fitting.</exception>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.UpdateMEPCurve(Autodesk.Revit.DB.Element,Autodesk.Revit.DB.Curve)">
            <summary>
            Updates the mep curve.
            </summary>
            <param name="element">The element.</param>
            <param name="newCurve">The new curve.</param>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.ReadFamilyInstancesPointBased(Autodesk.Revit.DB.Document,CivilConnection.CivilDocument,System.Int32)">
            <summary>
            Reads the family instances point based.
            </summary>
            <param name="doc">The document.</param>
            <param name="civilDocument">The civil document.</param>
            <param name="categoryId">The category identifier.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.ObjectLocationParameters(Revit.Elements.FamilyInstance)">
            <summary>
            Object location parameters.
            </summary>
            <param name="familyInstance">The family instance.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.LinearObjectLocationParameters(System.Object)">
            <summary>
            Linear objects location parameters.
            </summary>
            <param name="linearMEPCurve">The linear mep curve.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.GetStationOffsetElevation(CivilConnection.Corridor,System.Int32,Autodesk.Revit.DB.XYZ)">
            <summary>
            Gets the station offset elevation.
            </summary>
            <param name="corridor">The corridor.</param>
            <param name="baselineIndex">Index of the baseline.</param>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="T:CivilConnection.UtilsObjectsLocation.ADSK_Parameter">
            <summary>
            Parameter to collect Name and GUID
            </summary>
        </member>
        <member name="P:CivilConnection.UtilsObjectsLocation.ADSK_Parameter.Name">
            <summary>
            The name of the shared parameter
            </summary>
        </member>
        <member name="P:CivilConnection.UtilsObjectsLocation.ADSK_Parameter.GUID">
            <summary>
            The GUID of the shared parameter
            </summary>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.ADSK_Parameter.#ctor(System.String,System.String)">
            <summary>
            Constrictor
            </summary>
            <param name="name">The name of the shared parameter.</param>
            <param name="guid">The guid of the shared parameter.</param>
        </member>
        <member name="T:CivilConnection.UtilsObjectsLocation.ADSK_Parameters">
            <summary>
            Class that given a parameter name returns the same guid.
            This is to have the same CivilConnection parameters in Revit files and tansfer project standards.
            </summary>
        </member>
        <member name="P:CivilConnection.UtilsObjectsLocation.ADSK_Parameters.Corridor">
            <excluded/>
        </member>
        <member name="P:CivilConnection.UtilsObjectsLocation.ADSK_Parameters.BaselineIndex">
            <excluded/>
        </member>
        <member name="P:CivilConnection.UtilsObjectsLocation.ADSK_Parameters.RegionIndex">
            <excluded/>
        </member>
        <member name="P:CivilConnection.UtilsObjectsLocation.ADSK_Parameters.RegionRelative">
            <excluded/>
        </member>
        <member name="P:CivilConnection.UtilsObjectsLocation.ADSK_Parameters.RegionNormalized">
            <excluded/>
        </member>
        <member name="P:CivilConnection.UtilsObjectsLocation.ADSK_Parameters.Code">
            <excluded/>
        </member>
        <member name="P:CivilConnection.UtilsObjectsLocation.ADSK_Parameters.Side">
            <excluded/>
        </member>
        <member name="P:CivilConnection.UtilsObjectsLocation.ADSK_Parameters.X">
            <excluded/>
        </member>
        <member name="P:CivilConnection.UtilsObjectsLocation.ADSK_Parameters.Y">
            <excluded/>
        </member>
        <member name="P:CivilConnection.UtilsObjectsLocation.ADSK_Parameters.Z">
            <excluded/>
        </member>
        <member name="P:CivilConnection.UtilsObjectsLocation.ADSK_Parameters.Station">
            <excluded/>
        </member>
        <member name="P:CivilConnection.UtilsObjectsLocation.ADSK_Parameters.Offset">
            <excluded/>
        </member>
        <member name="P:CivilConnection.UtilsObjectsLocation.ADSK_Parameters.Elevation">
            <excluded/>
        </member>
        <member name="P:CivilConnection.UtilsObjectsLocation.ADSK_Parameters.EndStation">
            <excluded/>
        </member>
        <member name="P:CivilConnection.UtilsObjectsLocation.ADSK_Parameters.EndOffset">
            <excluded/>
        </member>
        <member name="P:CivilConnection.UtilsObjectsLocation.ADSK_Parameters.EndElevation">
            <excluded/>
        </member>
        <member name="P:CivilConnection.UtilsObjectsLocation.ADSK_Parameters.AngleZ">
            <excluded/>
        </member>
        <member name="P:CivilConnection.UtilsObjectsLocation.ADSK_Parameters.Update">
            <excluded/>
        </member>
        <member name="P:CivilConnection.UtilsObjectsLocation.ADSK_Parameters.Delete">
            <excluded/>
        </member>
        <member name="P:CivilConnection.UtilsObjectsLocation.ADSK_Parameters.MultiPoint">
            <excluded/>
        </member>
        <member name="P:CivilConnection.UtilsObjectsLocation.ADSK_Parameters.EndRegionRelative">
            <excluded/>
        </member>
        <member name="P:CivilConnection.UtilsObjectsLocation.ADSK_Parameters.EndRegionNormalized">
            <excluded/>
        </member>
        <member name="P:CivilConnection.UtilsObjectsLocation.ADSK_Parameters.Instance">
            <summary>
            The instance to create the Shared Parameters
            </summary>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.ADSK_Parameters.#ctor">
            <excluded/>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.RawCreateProjectParameter(Autodesk.Revit.DB.Document,CivilConnection.UtilsObjectsLocation.ADSK_Parameter,Autodesk.Revit.DB.ParameterType,System.Boolean,System.Boolean,Autodesk.Revit.DB.CategorySet,Autodesk.Revit.DB.BuiltInParameterGroup,System.Boolean)">
            <summary>
            Returns a raw of parameters to be used for creation.
            </summary>
            <param name="doc">The document.</param>
            <param name="parameter">The parameter.</param>
            <param name="type">The type.</param>
            <param name="visible">if set to <c>true</c> [visible].</param>
            <param name="userModifiable">if set to <c>true</c> [user modifiable].</param>
            <param name="cats">The cats.</param>
            <param name="group">The group.</param>
            <param name="inst">if set to <c>true</c> [inst].</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.CheckParameters(Autodesk.Revit.DB.Document)">
            <summary>
            Checks the parameters.
            </summary>
            <param name="doc">The document.</param>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.FamilyInstancesPointBased(Autodesk.Revit.DB.Document,CivilConnection.CivilDocument,System.Object[][])">
            <summary>
            Families the instances point based.
            </summary>
            <param name="doc">The document.</param>
            <param name="civilDocument">The civil document.</param>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.ReadFamilyInstanceLocationParametersForUpdate(Autodesk.Revit.DB.Document,CivilConnection.CivilDocument,System.Object[][])">
            <summary>
            Reads the family instance location parameters for update.
            </summary>
            <param name="doc">The document.</param>
            <param name="civilDocument">The civil document.</param>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.ReadFamilyInstanceLocationParametersForCreate(Autodesk.Revit.DB.Document,CivilConnection.CivilDocument,System.Object[][])">
            <summary>
            Reads the family instance location parameters for create.
            </summary>
            <param name="doc">The document.</param>
            <param name="civilDocument">The civil document.</param>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.UpdateLinearObjectLocation(Autodesk.Revit.DB.Document,CivilConnection.CivilDocument,System.Object[][])">
            <summary>
            Updates the linear object location.
            </summary>
            <param name="doc">The document.</param>
            <param name="civilDocument">The civil document.</param>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.UpdateFamilyInstance(Revit.Elements.FamilyInstance,Revit.Elements.FamilyType,CivilConnection.Featureline,System.Boolean,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Updates the family instance.
            </summary>
            <param name="familyInstance">The family instance.</param>
            <param name="familyType">Type of the family.</param>
            <param name="featureline">The featureline.</param>
            <param name="useBaseline">if set to <c>true</c> [use baseline].</param>
            <param name="station">The station.</param>
            <param name="offset">The offset.</param>
            <param name="elevation">The elevation.</param>
            <param name="angleZ">The angle z.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.CreateFamilyInstance(Revit.Elements.FamilyType,CivilConnection.Featureline,System.Boolean,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates the family instance.
            </summary>
            <param name="familyType">Type of the family.</param>
            <param name="featureline">The featureline.</param>
            <param name="useBaseline">if set to <c>true</c> [use baseline].</param>
            <param name="station">The station.</param>
            <param name="offset">The offset.</param>
            <param name="elevation">The elevation.</param>
            <param name="angleZ">The angle z.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.RevitLinkByStationOffsetElevation(Revit.Elements.Element,CivilConnection.Featureline,System.Double,System.Double,System.Double,System.Boolean,System.Double)">
            <summary>
            Revit link by station offset elevation.
            </summary>
            <param name="revitLinkType">Type of the revit link.</param>
            <param name="featureline">The featureline.</param>
            <param name="station">The station.</param>
            <param name="offset">The offset.</param>
            <param name="elevation">The elevation.</param>
            <param name="rotate">if set to <c>true</c> [rotate].</param>
            <param name="rotation">The rotation.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.NamedSiteByStationOffsetElevation(CivilConnection.Featureline,System.Double,System.Double,System.Double,System.Boolean,System.Double)">
            <summary>
            Create a Named site by station offset elevation.
            </summary>
            <param name="featureline">The featureline.</param>
            <param name="station">The station.</param>
            <param name="offset">The offset.</param>
            <param name="elevation">The elevation.</param>
            <param name="rotate">if set to <c>true</c> [rotate].</param>
            <param name="rotation">The rotation.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.ClosestFeaturelineByPoint(Autodesk.DesignScript.Geometry.Point,CivilConnection.Corridor,System.Int32,System.String,System.String)">
            <summary>
            Given a Point it returns the first the Featureline that meets the argument values.
            </summary>
            <param name="p">The p.</param>
            <param name="corridor">The corridor.</param>
            <param name="baselineIndex">Index of the baseline.</param>
            <param name="code">The code.</param>
            <param name="side">The side.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.FeaturelineByParameter(CivilConnection.Corridor,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Returns the Featureline that meets the argument values.
            </summary>
            <param name="corridor">The corridor.</param>
            <param name="baselineIndex">Index of the baseline.</param>
            <param name="regionIndex">Index of the region.</param>
            <param name="code">The code.</param>
            <param name="side">The side.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.ClosestFeaturelineByElement(Revit.Elements.Element,CivilConnection.Corridor,System.Int32,System.String,System.String)">
            <summary>
            Given a Revit Element it returns the first Featureline that meets the argument values.
            </summary>
            <param name="element">The element.</param>
            <param name="corridor">The corridor.</param>
            <param name="baselineIndex">Index of the baseline.</param>
            <param name="code">The code.</param>
            <param name="side">The side.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.UtilsObjectsLocation.WallBySurface(Autodesk.DesignScript.Geometry.Surface,Revit.Elements.WallType,System.Boolean)">
            <summary>
            Create walls from surface.
            </summary>
            <param name="surface"></param>
            <param name="wallType"></param>
            <param name="structural"></param>
            <returns></returns>
            <remarks>The wall is recreated but not updated. The input surface must be planar and its normal must be orthogonal to the world Z Axis.</remarks>
        </member>
        <member name="T:CivilConnection.MultiPointConverter">
            <summary>
            Json Converter fot MultiPoint objects
            </summary>
        </member>
        <member name="M:CivilConnection.MultiPointConverter.CanConvert(System.Type)">
            <summary>
            Can Convert
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.MultiPointConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Read Json
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="P:CivilConnection.MultiPointConverter.CanWrite">
            <summary>
            Can write
            </summary>
        </member>
        <member name="M:CivilConnection.MultiPointConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Write Json
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="T:CivilConnection.ShapePointArrayConverter">
            <summary>
            Json Converter for ShapePoints objects
            </summary>
        </member>
        <member name="M:CivilConnection.ShapePointArrayConverter.CanConvert(System.Type)">
            <summary>
            Can Convert
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.ShapePointArrayConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Read Json
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="P:CivilConnection.ShapePointArrayConverter.CanWrite">
            <summary>
            Can Write
            </summary>
        </member>
        <member name="M:CivilConnection.ShapePointArrayConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Write Json
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="T:CivilConnection.ShapePointConverter">
            <summary>
            Json Converter for ShapePoint objects
            </summary>
        </member>
        <member name="M:CivilConnection.ShapePointConverter.CanConvert(System.Type)">
            <summary>
            Can Convert
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.ShapePointConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Read Json
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="P:CivilConnection.ShapePointConverter.CanWrite">
            <summary>
            Can Write
            </summary>
        </member>
        <member name="M:CivilConnection.ShapePointConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Write Json
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="T:CivilConnection.UtilsSectionView">
            <summary>
            Collection of utilities for SectionViews.
            </summary>
        </member>
        <member name="M:CivilConnection.UtilsSectionView.CutLines(Autodesk.Revit.DB.ElementId)">
            <summary>
            Returns the cut lines.
            </summary>
            <param name="viewId">The view identifier.</param>
        </member>
        <member name="M:CivilConnection.UtilsSectionView.CloseCopy">
            <summary>
            Closes the copy of the auxilliaary Revit linked file.
            </summary>
        </member>
        <member name="M:CivilConnection.UtilsSectionView.SketchOptimizer(Autodesk.Revit.DB.Curve,Autodesk.Revit.DB.Curve)">
            <summary>
            Optimizes the curves.
            </summary>
            <param name="ca">The ca.</param>
            <param name="cb">The cb.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.UtilsSectionView.ArcsList(Autodesk.Revit.DB.Arc,Autodesk.Revit.DB.Arc)">
            <summary>
            Returns a list of optimized arcs.
            </summary>
            <param name="aa">The aa.</param>
            <param name="ab">The ab.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.UtilsSectionView.CutCurvesInView(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.ElementId)">
            <summary>
            Returns the cutting curves in the view.
            </summary>
            <param name="doc">The document.</param>
            <param name="viewId">The view identifier.</param>
            <returns></returns>
        </member>
        <member name="M:CivilConnection.UtilsSectionView.SolidEdgesToCurve(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.Solid,Autodesk.Revit.DB.View,Autodesk.Revit.DB.Category)">
            <summary>
            Returns the Solid edges in the View plane.
            </summary>
            <param name="doc"></param>
            <param name="s"></param>
            <param name="view"></param>
            <param name="cat"></param>
            <returns></returns>
        </member>
    </members>
</doc>
